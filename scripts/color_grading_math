BackdropNode {
 inputs 0
 name BackdropNode1
 tile_color 0x2b2b2b01
 label "<font color=#777777><font size=7><b>Gamma</b></font>"
 note_font Helvetica
 note_font_size 34
 note_font_color 0xffffffff
 xpos -950
 ypos 1502
 bdwidth 881
 bdheight 787
 z_order -10
}
BackdropNode {
 inputs 0
 name BackdropNode10
 tile_color 0x23232301
 label "<font color=#707070><font size=7><b>ColorLookup</b></font>"
 note_font Helvetica
 note_font_size 34
 note_font_color 0xffffffff
 xpos -911
 ypos 7261
 bdwidth 1310
 bdheight 899
 z_order -10
}
BackdropNode {
 inputs 0
 name BackdropNode11
 tile_color 0x21212101
 label "<font color=#6d6d6d><font size=7><b>Rolloff Contrast</b></font>"
 note_font Helvetica
 note_font_size 34
 note_font_color 0xffffffff
 xpos -911
 ypos 8221
 bdwidth 1310
 bdheight 899
 z_order -10
}
BackdropNode {
 inputs 0
 name BackdropNode12
 tile_color 0x1e1e1e01
 label "<font color=#6b6b6b><font size=7><b>Histogram</b></font>"
 note_font Helvetica
 note_font_size 34
 note_font_color 0xffffffff
 xpos -894
 ypos 9270
 bdwidth 1310
 bdheight 899
 z_order -10
}
BackdropNode {
 inputs 0
 name BackdropNode2
 tile_color 0x2b2b2b01
 label "<font color=#777777><font size=7><b>Elementary Operations</b></font>"
 note_font Helvetica
 note_font_size 34
 note_font_color 0xffffffff
 xpos -950
 ypos -291
 bdwidth 884
 bdheight 821
 z_order -10
}
BackdropNode {
 inputs 0
 name BackdropNode3
 tile_color 0x28282801
 label "<font color=#757575><font size=7><b>Grade Node</b></font>"
 note_font Helvetica
 note_font_size 34
 note_font_color 0xffffffff
 xpos -950
 ypos 621
 bdwidth 884
 bdheight 821
 z_order -10
}
BackdropNode {
 inputs 0
 name BackdropNode4
 tile_color 0x2b2b2b01
 label "<font color=#777777><font size=7><b>Log</b></font>"
 note_font Helvetica
 note_font_size 34
 note_font_color 0xffffffff
 xpos -950
 ypos 3270
 bdwidth 1280
 bdheight 873
 z_order -10
}
BackdropNode {
 inputs 0
 name BackdropNode5
 tile_color 0x42424201
 label "<font color=#a8a8a8><font size=7><b>Value Operators</b></font>"
 note_font Helvetica
 note_font_size 19
 note_font_color 0xffffffff
 xpos -950
 ypos -1157
 bdwidth 1192
 bdheight 636
 z_order -10
}
BackdropNode {
 inputs 0
 name BackdropNode6
 tile_color 0x28282801
 label "<font color=#757575><font size=7><b>Exposure</b></font>"
 note_font Helvetica
 note_font_size 34
 note_font_color 0xffffffff
 xpos -950
 ypos 2390
 bdwidth 881
 bdheight 787
 z_order -10
}
BackdropNode {
 inputs 0
 name BackdropNode7
 tile_color 0x28282801
 label "<font color=#757575><font size=7><b>Invert</b></font>"
 note_font Helvetica
 note_font_size 34
 note_font_color 0xffffffff
 xpos -930
 ypos 4254
 bdwidth 1310
 bdheight 899
 z_order -10
}
BackdropNode {
 inputs 0
 name BackdropNode8
 tile_color 0x26262601
 label "<font color=#727272><font size=7><b>Toe</b></font>"
 note_font Helvetica
 note_font_size 34
 note_font_color 0xffffffff
 xpos -930
 ypos 5262
 bdwidth 1310
 bdheight 899
 z_order -10
}
BackdropNode {
 inputs 0
 name BackdropNode9
 tile_color 0x23232301
 label "<font color=#707070><font size=7><b>ColorCorrect</b></font>"
 note_font Helvetica
 note_font_size 34
 note_font_color 0xffffffff
 xpos -912
 ypos 6254
 bdwidth 1310
 bdheight 899
 z_order -10
}
Multiply {
 inputs 0
 channels rgba
 name Multiply1
 note_font Helvetica
 xpos -920
 ypos -1017
}
Grade {
 inputs 0
 black_clamp false
 name Grade1
 note_font Helvetica
 xpos -590
 ypos -1017
}
Gamma {
 inputs 0
 channels rgba
 name Gamma2
 note_font Helvetica
 xpos -700
 ypos -1017
}
Add {
 inputs 0
 channels rgb
 name Add2
 note_font Helvetica
 xpos -810
 ypos -1017
}
Constant {
 inputs 0
 format "1024 1024 0 0 1024 1024 1 square_1K"
 name Constant2
 note_font Helvetica
 xpos -590
 ypos -81
 postage_stamp false
}
Ramp {
 p0 {0 0}
 p1 {{width} 0}
 color {{parent.PlotSlice1.max_value-parent.PlotSlice1.min_value}}
 name Ramp1
 note_font Helvetica
 xpos -590
 ypos -57
}
Add {
 channels rgba
 value {{parent.PlotSlice1.min_value}}
 name Add3
 note_font Helvetica
 xpos -590
 ypos -33
}
Dot {
 name Dot3
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos -556
 ypos 42
}
Add {
 channels rgb
 value -1
 name Add6
 note_font Helvetica
 xpos -590
 ypos 111
}
Multiply {
 channels rgb
 name Multiply2
 note_font Helvetica
 xpos -590
 ypos 135
}
Add {
 channels rgb
 value 1
 name Add4
 note_font Helvetica
 xpos -590
 ypos 159
}
Dot {
 name Dot4
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos -556
 ypos 210
}
Group {
 name PlotSlice1
 xpos -370
 ypos 206
 addUserKnob {20 PlotSlice_tab l PlotSlice}
 addUserKnob {41 useGPUIfAvailable l "Use GPU if available" T PlotSlice.useGPUIfAvailable}
 addUserKnob {12 pos1 l p1}
 addUserKnob {12 pos2 l p2 -STARTLINE}
 pos2 {{width} 0}
 addUserKnob {7 max_value l "max value" R 1 10}
 max_value 3
 addUserKnob {7 min_value l "min value" R -1 0}
 min_value -0.1
 addUserKnob {4 style M {replace over right bottom ""}}
 addUserKnob {6 antialias t "enable antialiasing. prettier, at the cost of speed." -STARTLINE}
 antialias true
 addUserKnob {6 draw_lines l "draw lines" t "draw horizontal lines every whole number" -STARTLINE}
 draw_lines true
 addUserKnob {18 lines_color l "lines color"}
 lines_color 0.1
 addUserKnob {6 lines_color_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
}
 Input {
  inputs 0
  name Input
  xpos -810
  ypos -658
 }
 Dot {
  name Dot13
  note_font_size 42
  note_font_color 0x7f7f7f01
  xpos -776
  ypos -558
 }
set N60157900 [stack 0]
 Dot {
  name Dot12
  note_font_size 42
  note_font_color 0x7f7f7f01
  xpos -556
  ypos -558
 }
set N60157200 [stack 0]
 Transform {
  translate {{-parent.pos1} {-parent.pos1}}
  black_outside false
  name Transform4
  label T
  xpos -590
  ypos -520
 }
 Transform {
  rotate {{"-degrees( atan2(parent.pos2.y-parent.pos1.y, parent.pos2.x-parent.pos1.x) )"}}
  black_outside false
  name Transform5
  label "R\n"
  xpos -590
  ypos -472
 }
 Transform {
  scale {{"width / sqrt(pow(parent.pos2.x-parent.pos1.x,2) + pow(parent.pos2.y-parent.pos1.y,2))"}}
  black_outside false
  name Transform6
  label S
  xpos -590
  ypos -424
 }
set N60155d00 [stack 0]
 Crop {
  box {0 0 {Input.width} 1}
  reformat true
  crop false
  name Crop1
  xpos -700
  ypos -418
 }
 Expression {
  expr0 r/max_val-(min_val/max_val)
  expr1 g/max_val-(min_val/max_val)
  expr2 b/max_val-(min_val/max_val)
  expr3 a/max_val-(min_val/max_val)
  name Fit
  xpos -700
  ypos -394
  addUserKnob {20 Param}
  addUserKnob {7 max_val R 1 10}
  max_val {{parent.max_value+fabs(parent.min_value)}}
  addUserKnob {7 min_val R -1 0}
  min_val {{parent.min_value}}
 }
 Reformat {
  type "to box"
  box_width {{Input.width}}
  box_height {{Input.height}}
  box_fixed true
  resize distort
  filter impulse
  name Reformat1
  xpos -700
  ypos -370
 }
 Expression {
  temp_name0 c
  temp_expr0 0.8
  expr0 "fabs((y/height)-r)<=tolerance ? c : 0"
  expr1 "fabs((y/height)-g)<=tolerance ? c : 0"
  expr2 "fabs((y/height)-b)<=tolerance ? c : 0"
  expr3 "fabs((y/height)-a)<=tolerance ? c : 0"
  name PlotSlice_
  xpos -700
  ypos -344
  addUserKnob {20 User}
  addUserKnob {7 tolerance}
  tolerance 0.0007
 }
push $N60155d00
 Reformat {
  type "to box"
  box_width {{"\[exists input] ? input.width : root.width"}}
  box_height {{"\[exists input] ? input.height : root.height"}}
  box_fixed true
  box_pixel_aspect {{"\[exists input] ? input.pixel_aspect : root.pixel_aspect"}}
  resize none
  black_outside true
  name BboxRemove
  xpos -590
  ypos -370
 }
 BlinkScript {
  recompileCount 3
  KernelDescription "2 \"PlotSlice\" iterate pixelWise a85c49a08f78aaad29c10667611d0922f3ade835175dd677155ef71c6ca45491 2 \"src\" Read Random \"dst\" Write Random 7 \"plot_input\" Bool 1 AA== \"color\" Float 1 AAAAAA== \"max_val\" Float 1 AAAAAA== \"min_val\" Float 1 AAAAAA== \"draw_lines\" Bool 1 AA== \"tolerance\" Float 1 AAAAAA== \"lines_color\" Float 3 AAAAAAAAAAAAAAAAAAAAAA== 7 \"plot_input\" 1 1 \"color\" 1 1 \"max_val\" 1 1 \"min_val\" 1 1 \"draw_lines\" 1 1 \"tolerance\" 1 1 \"lines_color\" 3 1 0"
  kernelSource "kernel PlotSlice : public ImageComputationKernel<ePixelWise>\n\{\n  Image<eRead, eAccessRandom, eEdgeClamped> src;\n  Image<eWrite, eAccessRandom> dst;\n\n  param:\n    bool plot_input;\n    float color;\n    float max_val;\n    float min_val;\n    bool draw_lines;\n    float tolerance;\n    float3 lines_color;\n\n  float gaussian(float d, float a, float expv) \{\n    return max(0.0f, exp(-a*d*d)-expv);\n  \}\n\n  float gaussian_filter(float x, float y, float r) \{\n    // return gaussian weighted distance from origin (0, 0)\n    // given coordinate (x, y) and radius r\n    float a = 1.5f; // rate falloff\n    float expv = exp(-a*r*r);\n    return gaussian(x, a, expv) * gaussian(y, a, expv);\n  \}\n\n  void write(float x, float y, int k, float c) \{\n    int n = 2;\n    int u0 = round(x);\n    int v0 = round(y);\n    // skip if center pixel weight is greater than tolerance\n    // if ( dst.bounds.inside(u0, v0)) \{\n    //   if (dst(u0, v0, 3) >= tolerance) return;\n    // \}\n    // loop over neighborhood\n    for (int j = -n; j <= n; j++) \{\n      int v = v0 + j;\n      for (int i = -n; i <= n; i++) \{\n        int u = u0 + i;\n        if ( dst.bounds.inside(u, v)) \{\n          // get filter weight for coord (u,v)\n          float w = gaussian_filter(u-x, v-y, float(n));\n          float c0 = dst(u, v, k); // existing color\n          float w0 = dst(u, v, 3); // existing alpha\n          // merge current color sample over existing color sample\n          dst(u, v, k) = c*w+c0*(1-w);\n          // merge current weight over existing weight\n          dst(u, v, 3) = w+w0*(1-w);\n        \}\n      \}\n    \}\n  \}\n\n  float scale(float x) \{\n    return (x*dst.bounds.height())/(max_val)-((min_val/max_val)*dst.bounds.height());\n  \}\n\n  void process(int2 pos) \{\n    if (pos.y == 0) \{\n      if (draw_lines) \{\n        for (int i = 0; i < max_val; i++) \{\n          for (int k = 0; k < 3; k++) \{\n            write(pos.x, scale(i), k, lines_color\[k]);\n          \}\n        \}\n      \}\n      if (plot_input) \{\n        float4 source = src(pos.x, pos.y);\n        for (int i = 0; i < 3; i++)\{\n          write(pos.x, scale(source\[i]), i, color);\n        \}\n      \}\n    \}\n  \}\n\};"
  rebuild ""
  PlotSlice_plot_input {{parent.antialias}}
  PlotSlice_color 0.6
  PlotSlice_max_val {{parent.max_value+fabs(parent.min_value)}}
  PlotSlice_min_val {{parent.min_value}}
  PlotSlice_draw_lines {{parent.draw_lines}}
  PlotSlice_tolerance 1.01
  PlotSlice_lines_color {{parent.lines_color.r} {parent.lines_color.g} {parent.lines_color.b}}
  rebuild_finalise ""
  name PlotSlice
  xpos -590
  ypos -328
 }
 Merge2 {
  inputs 2
  bbox B
  name Switch_Method
  xpos -590
  ypos -274
  disable {{parent.antialias}}
 }
 Matrix {
  channels rgba
  matrix {
      {1 2 1}
      {2 4 2}
      {1 2 1}
    }
  normalize true
  name Antialias
  xpos -590
  ypos -226
 }
 Keyer {
  operation "luminance key"
  name Keyer1
  xpos -590
  ypos -184
 }
set N60115600 [stack 0]
push $N60157200
 ContactSheet {
  inputs 2
  width {{Input.width}}
  height {{Input.height*2}}
  rows 2
  columns 1
  roworder TopBottom
  name ContactSheet2
  label Bottom
  xpos -370
  ypos -184
 }
push $N60115600
push $N60157200
 ContactSheet {
  inputs 2
  width {{Input.width*2}}
  height {{Input.height}}
  rows 1
  columns 2
  name ContactSheet1
  label Right
  xpos -480
  ypos -184
 }
push $N60115600
push $N60157900
 Merge2 {
  inputs 2
  name Merge1
  xpos -810
  ypos -178
 }
push $N60115600
 Switch {
  inputs 4
  which {{parent.style}}
  name switch_plot_type
  xpos -810
  ypos -106
 }
 Output {
  name Output
  xpos -810
  ypos -34
 }
end_group
Constant {
 inputs 0
 format "1024 1024 0 0 1024 1024 1 square_1K"
 name Constant5
 note_font Helvetica
 xpos -590
 ypos 831
 postage_stamp false
}
Ramp {
 p0 {0 0}
 p1 {{width} 0}
 color {{parent.PlotSlice4.max_value-parent.PlotSlice4.min_value}}
 name Ramp4
 note_font Helvetica
 xpos -590
 ypos 855
}
Add {
 channels rgba
 value {{parent.PlotSlice4.min_value}}
 name Add7
 note_font Helvetica
 xpos -590
 ypos 879
}
Dot {
 name Dot9
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos -556
 ypos 954
}
Grade {
 black_clamp false
 name Grade3
 note_font Helvetica
 xpos -590
 ypos 1023
}
Dot {
 name Dot10
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos -556
 ypos 1122
}
Group {
 name PlotSlice4
 xpos -370
 ypos 1118
 addUserKnob {20 PlotSlice_tab l PlotSlice}
 addUserKnob {41 useGPUIfAvailable l "Use GPU if available" T PlotSlice.useGPUIfAvailable}
 addUserKnob {12 pos1 l p1}
 addUserKnob {12 pos2 l p2 -STARTLINE}
 pos2 {{width} 0}
 addUserKnob {7 max_value l "max value" R 1 10}
 max_value 3
 addUserKnob {7 min_value l "min value" R -1 0}
 min_value -0.1
 addUserKnob {4 style M {replace over right bottom ""}}
 addUserKnob {6 antialias t "enable antialiasing. prettier, at the cost of speed." -STARTLINE}
 antialias true
 addUserKnob {6 draw_lines l "draw lines" t "draw horizontal lines every whole number" -STARTLINE}
 draw_lines true
 addUserKnob {18 lines_color l "lines color"}
 lines_color 0.1
 addUserKnob {6 lines_color_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
}
 Input {
  inputs 0
  name Input
  xpos -810
  ypos -658
 }
 Dot {
  name Dot13
  note_font_size 42
  note_font_color 0x7f7f7f01
  xpos -776
  ypos -558
 }
set N2347e400 [stack 0]
 Dot {
  name Dot12
  note_font_size 42
  note_font_color 0x7f7f7f01
  xpos -556
  ypos -558
 }
set N2347dd00 [stack 0]
 Transform {
  translate {{-parent.pos1} {-parent.pos1}}
  black_outside false
  name Transform4
  label T
  xpos -590
  ypos -520
 }
 Transform {
  rotate {{"-degrees( atan2(parent.pos2.y-parent.pos1.y, parent.pos2.x-parent.pos1.x) )"}}
  black_outside false
  name Transform5
  label "R\n"
  xpos -590
  ypos -472
 }
 Transform {
  scale {{"width / sqrt(pow(parent.pos2.x-parent.pos1.x,2) + pow(parent.pos2.y-parent.pos1.y,2))"}}
  black_outside false
  name Transform6
  label S
  xpos -590
  ypos -424
 }
set N2347c800 [stack 0]
 Crop {
  box {0 0 {Input.width} 1}
  reformat true
  crop false
  name Crop1
  xpos -700
  ypos -418
 }
 Expression {
  expr0 r/max_val-(min_val/max_val)
  expr1 g/max_val-(min_val/max_val)
  expr2 b/max_val-(min_val/max_val)
  expr3 a/max_val-(min_val/max_val)
  name Fit
  xpos -700
  ypos -394
  addUserKnob {20 Param}
  addUserKnob {7 max_val R 1 10}
  max_val {{parent.max_value+fabs(parent.min_value)}}
  addUserKnob {7 min_val R -1 0}
  min_val {{parent.min_value}}
 }
 Reformat {
  type "to box"
  box_width {{Input.width}}
  box_height {{Input.height}}
  box_fixed true
  resize distort
  filter impulse
  name Reformat1
  xpos -700
  ypos -370
 }
 Expression {
  temp_name0 c
  temp_expr0 0.8
  expr0 "fabs((y/height)-r)<=tolerance ? c : 0"
  expr1 "fabs((y/height)-g)<=tolerance ? c : 0"
  expr2 "fabs((y/height)-b)<=tolerance ? c : 0"
  expr3 "fabs((y/height)-a)<=tolerance ? c : 0"
  name PlotSlice_
  xpos -700
  ypos -344
  addUserKnob {20 User}
  addUserKnob {7 tolerance}
  tolerance 0.0007
 }
push $N2347c800
 Reformat {
  type "to box"
  box_width {{"\[exists input] ? input.width : root.width"}}
  box_height {{"\[exists input] ? input.height : root.height"}}
  box_fixed true
  box_pixel_aspect {{"\[exists input] ? input.pixel_aspect : root.pixel_aspect"}}
  resize none
  black_outside true
  name BboxRemove
  xpos -590
  ypos -370
 }
 BlinkScript {
  recompileCount 3
  KernelDescription "2 \"PlotSlice\" iterate pixelWise a85c49a08f78aaad29c10667611d0922f3ade835175dd677155ef71c6ca45491 2 \"src\" Read Random \"dst\" Write Random 7 \"plot_input\" Bool 1 AA== \"color\" Float 1 AAAAAA== \"max_val\" Float 1 AAAAAA== \"min_val\" Float 1 AAAAAA== \"draw_lines\" Bool 1 AA== \"tolerance\" Float 1 AAAAAA== \"lines_color\" Float 3 AAAAAAAAAAAAAAAAAAAAAA== 7 \"plot_input\" 1 1 \"color\" 1 1 \"max_val\" 1 1 \"min_val\" 1 1 \"draw_lines\" 1 1 \"tolerance\" 1 1 \"lines_color\" 3 1 0"
  kernelSource "kernel PlotSlice : public ImageComputationKernel<ePixelWise>\n\{\n  Image<eRead, eAccessRandom, eEdgeClamped> src;\n  Image<eWrite, eAccessRandom> dst;\n\n  param:\n    bool plot_input;\n    float color;\n    float max_val;\n    float min_val;\n    bool draw_lines;\n    float tolerance;\n    float3 lines_color;\n\n  float gaussian(float d, float a, float expv) \{\n    return max(0.0f, exp(-a*d*d)-expv);\n  \}\n\n  float gaussian_filter(float x, float y, float r) \{\n    // return gaussian weighted distance from origin (0, 0)\n    // given coordinate (x, y) and radius r\n    float a = 1.5f; // rate falloff\n    float expv = exp(-a*r*r);\n    return gaussian(x, a, expv) * gaussian(y, a, expv);\n  \}\n\n  void write(float x, float y, int k, float c) \{\n    int n = 2;\n    int u0 = round(x);\n    int v0 = round(y);\n    // skip if center pixel weight is greater than tolerance\n    // if ( dst.bounds.inside(u0, v0)) \{\n    //   if (dst(u0, v0, 3) >= tolerance) return;\n    // \}\n    // loop over neighborhood\n    for (int j = -n; j <= n; j++) \{\n      int v = v0 + j;\n      for (int i = -n; i <= n; i++) \{\n        int u = u0 + i;\n        if ( dst.bounds.inside(u, v)) \{\n          // get filter weight for coord (u,v)\n          float w = gaussian_filter(u-x, v-y, float(n));\n          float c0 = dst(u, v, k); // existing color\n          float w0 = dst(u, v, 3); // existing alpha\n          // merge current color sample over existing color sample\n          dst(u, v, k) = c*w+c0*(1-w);\n          // merge current weight over existing weight\n          dst(u, v, 3) = w+w0*(1-w);\n        \}\n      \}\n    \}\n  \}\n\n  float scale(float x) \{\n    return (x*dst.bounds.height())/(max_val)-((min_val/max_val)*dst.bounds.height());\n  \}\n\n  void process(int2 pos) \{\n    if (pos.y == 0) \{\n      if (draw_lines) \{\n        for (int i = 0; i < max_val; i++) \{\n          for (int k = 0; k < 3; k++) \{\n            write(pos.x, scale(i), k, lines_color\[k]);\n          \}\n        \}\n      \}\n      if (plot_input) \{\n        float4 source = src(pos.x, pos.y);\n        for (int i = 0; i < 3; i++)\{\n          write(pos.x, scale(source\[i]), i, color);\n        \}\n      \}\n    \}\n  \}\n\};"
  rebuild ""
  PlotSlice_plot_input {{parent.antialias}}
  PlotSlice_color 0.6
  PlotSlice_max_val {{parent.max_value+fabs(parent.min_value)}}
  PlotSlice_min_val {{parent.min_value}}
  PlotSlice_draw_lines {{parent.draw_lines}}
  PlotSlice_tolerance 1.01
  PlotSlice_lines_color {{parent.lines_color.r} {parent.lines_color.g} {parent.lines_color.b}}
  rebuild_finalise ""
  name PlotSlice
  xpos -590
  ypos -328
 }
 Merge2 {
  inputs 2
  bbox B
  name Switch_Method
  xpos -590
  ypos -274
  disable {{parent.antialias}}
 }
 Matrix {
  channels rgba
  matrix {
      {1 2 1}
      {2 4 2}
      {1 2 1}
    }
  normalize true
  name Antialias
  xpos -590
  ypos -226
 }
 Keyer {
  operation "luminance key"
  name Keyer1
  xpos -590
  ypos -184
 }
set N23454100 [stack 0]
push $N2347dd00
 ContactSheet {
  inputs 2
  width {{Input.width}}
  height {{Input.height*2}}
  rows 2
  columns 1
  roworder TopBottom
  name ContactSheet2
  label Bottom
  xpos -370
  ypos -184
 }
push $N23454100
push $N2347dd00
 ContactSheet {
  inputs 2
  width {{Input.width*2}}
  height {{Input.height}}
  rows 1
  columns 2
  name ContactSheet1
  label Right
  xpos -480
  ypos -184
 }
push $N23454100
push $N2347e400
 Merge2 {
  inputs 2
  name Merge1
  xpos -810
  ypos -178
 }
push $N23454100
 Switch {
  inputs 4
  which {{parent.style}}
  name switch_plot_type
  xpos -810
  ypos -106
 }
 Output {
  name Output
  xpos -810
  ypos -34
 }
end_group
Constant {
 inputs 0
 format "1024 1024 0 0 1024 1024 1 square_1K"
 name Constant3
 note_font Helvetica
 xpos -590
 ypos 2583
 postage_stamp false
}
Ramp {
 p0 {0 0}
 p1 {{width} 0}
 color {{parent.PlotSlice5.max_value-parent.PlotSlice5.min_value}}
 name Ramp5
 note_font Helvetica
 xpos -590
 ypos 2607
}
Add {
 channels rgba
 value {{parent.PlotSlice5.min_value}}
 name Add5
 note_font Helvetica
 xpos -590
 ypos 2631
}
Dot {
 name Dot5
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos -556
 ypos 2706
}
set N400fab00 [stack 0]
EXPTool {
 mode Stops
 red 2
 green 2
 blue 2
 name Exposure
 note_font Helvetica
 xpos -590
 ypos 2775
}
Dot {
 name Dot6
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos -556
 ypos 2874
}
Group {
 name PlotSlice5
 xpos -370
 ypos 2870
 addUserKnob {20 PlotSlice_tab l PlotSlice}
 addUserKnob {41 useGPUIfAvailable l "Use GPU if available" T PlotSlice.useGPUIfAvailable}
 addUserKnob {12 pos1 l p1}
 addUserKnob {12 pos2 l p2 -STARTLINE}
 pos2 {{width} 0}
 addUserKnob {7 max_value l "max value" R 1 10}
 max_value 3
 addUserKnob {7 min_value l "min value" R -1 0}
 min_value -0.1
 addUserKnob {4 style M {replace over right bottom ""}}
 addUserKnob {6 antialias t "enable antialiasing. prettier, at the cost of speed." -STARTLINE}
 antialias true
 addUserKnob {6 draw_lines l "draw lines" t "draw horizontal lines every whole number" -STARTLINE}
 draw_lines true
 addUserKnob {18 lines_color l "lines color"}
 lines_color 0.1
 addUserKnob {6 lines_color_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
}
 Input {
  inputs 0
  name Input
  xpos -810
  ypos -658
 }
 Dot {
  name Dot13
  note_font_size 42
  note_font_color 0x7f7f7f01
  xpos -776
  ypos -558
 }
set N400cf900 [stack 0]
 Dot {
  name Dot12
  note_font_size 42
  note_font_color 0x7f7f7f01
  xpos -556
  ypos -558
 }
set N400cf200 [stack 0]
 Transform {
  translate {{-parent.pos1} {-parent.pos1}}
  black_outside false
  name Transform4
  label T
  xpos -590
  ypos -520
 }
 Transform {
  rotate {{"-degrees( atan2(parent.pos2.y-parent.pos1.y, parent.pos2.x-parent.pos1.x) )"}}
  black_outside false
  name Transform5
  label "R\n"
  xpos -590
  ypos -472
 }
 Transform {
  scale {{"width / sqrt(pow(parent.pos2.x-parent.pos1.x,2) + pow(parent.pos2.y-parent.pos1.y,2))"}}
  black_outside false
  name Transform6
  label S
  xpos -590
  ypos -424
 }
set N400cdd00 [stack 0]
 Crop {
  box {0 0 {Input.width} 1}
  reformat true
  crop false
  name Crop1
  xpos -700
  ypos -418
 }
 Expression {
  expr0 r/max_val-(min_val/max_val)
  expr1 g/max_val-(min_val/max_val)
  expr2 b/max_val-(min_val/max_val)
  expr3 a/max_val-(min_val/max_val)
  name Fit
  xpos -700
  ypos -394
  addUserKnob {20 Param}
  addUserKnob {7 max_val R 1 10}
  max_val {{parent.max_value+fabs(parent.min_value)}}
  addUserKnob {7 min_val R -1 0}
  min_val {{parent.min_value}}
 }
 Reformat {
  type "to box"
  box_width {{Input.width}}
  box_height {{Input.height}}
  box_fixed true
  resize distort
  filter impulse
  name Reformat1
  xpos -700
  ypos -370
 }
 Expression {
  temp_name0 c
  temp_expr0 0.8
  expr0 "fabs((y/height)-r)<=tolerance ? c : 0"
  expr1 "fabs((y/height)-g)<=tolerance ? c : 0"
  expr2 "fabs((y/height)-b)<=tolerance ? c : 0"
  expr3 "fabs((y/height)-a)<=tolerance ? c : 0"
  name PlotSlice_
  xpos -700
  ypos -344
  addUserKnob {20 User}
  addUserKnob {7 tolerance}
  tolerance 0.0007
 }
push $N400cdd00
 Reformat {
  type "to box"
  box_width {{"\[exists input] ? input.width : root.width"}}
  box_height {{"\[exists input] ? input.height : root.height"}}
  box_fixed true
  box_pixel_aspect {{"\[exists input] ? input.pixel_aspect : root.pixel_aspect"}}
  resize none
  black_outside true
  name BboxRemove
  xpos -590
  ypos -370
 }
 BlinkScript {
  recompileCount 3
  KernelDescription "2 \"PlotSlice\" iterate pixelWise a85c49a08f78aaad29c10667611d0922f3ade835175dd677155ef71c6ca45491 2 \"src\" Read Random \"dst\" Write Random 7 \"plot_input\" Bool 1 AA== \"color\" Float 1 AAAAAA== \"max_val\" Float 1 AAAAAA== \"min_val\" Float 1 AAAAAA== \"draw_lines\" Bool 1 AA== \"tolerance\" Float 1 AAAAAA== \"lines_color\" Float 3 AAAAAAAAAAAAAAAAAAAAAA== 7 \"plot_input\" 1 1 \"color\" 1 1 \"max_val\" 1 1 \"min_val\" 1 1 \"draw_lines\" 1 1 \"tolerance\" 1 1 \"lines_color\" 3 1 0"
  kernelSource "kernel PlotSlice : public ImageComputationKernel<ePixelWise>\n\{\n  Image<eRead, eAccessRandom, eEdgeClamped> src;\n  Image<eWrite, eAccessRandom> dst;\n\n  param:\n    bool plot_input;\n    float color;\n    float max_val;\n    float min_val;\n    bool draw_lines;\n    float tolerance;\n    float3 lines_color;\n\n  float gaussian(float d, float a, float expv) \{\n    return max(0.0f, exp(-a*d*d)-expv);\n  \}\n\n  float gaussian_filter(float x, float y, float r) \{\n    // return gaussian weighted distance from origin (0, 0)\n    // given coordinate (x, y) and radius r\n    float a = 1.5f; // rate falloff\n    float expv = exp(-a*r*r);\n    return gaussian(x, a, expv) * gaussian(y, a, expv);\n  \}\n\n  void write(float x, float y, int k, float c) \{\n    int n = 2;\n    int u0 = round(x);\n    int v0 = round(y);\n    // skip if center pixel weight is greater than tolerance\n    // if ( dst.bounds.inside(u0, v0)) \{\n    //   if (dst(u0, v0, 3) >= tolerance) return;\n    // \}\n    // loop over neighborhood\n    for (int j = -n; j <= n; j++) \{\n      int v = v0 + j;\n      for (int i = -n; i <= n; i++) \{\n        int u = u0 + i;\n        if ( dst.bounds.inside(u, v)) \{\n          // get filter weight for coord (u,v)\n          float w = gaussian_filter(u-x, v-y, float(n));\n          float c0 = dst(u, v, k); // existing color\n          float w0 = dst(u, v, 3); // existing alpha\n          // merge current color sample over existing color sample\n          dst(u, v, k) = c*w+c0*(1-w);\n          // merge current weight over existing weight\n          dst(u, v, 3) = w+w0*(1-w);\n        \}\n      \}\n    \}\n  \}\n\n  float scale(float x) \{\n    return (x*dst.bounds.height())/(max_val)-((min_val/max_val)*dst.bounds.height());\n  \}\n\n  void process(int2 pos) \{\n    if (pos.y == 0) \{\n      if (draw_lines) \{\n        for (int i = 0; i < max_val; i++) \{\n          for (int k = 0; k < 3; k++) \{\n            write(pos.x, scale(i), k, lines_color\[k]);\n          \}\n        \}\n      \}\n      if (plot_input) \{\n        float4 source = src(pos.x, pos.y);\n        for (int i = 0; i < 3; i++)\{\n          write(pos.x, scale(source\[i]), i, color);\n        \}\n      \}\n    \}\n  \}\n\};"
  rebuild ""
  PlotSlice_plot_input {{parent.antialias}}
  PlotSlice_color 0.6
  PlotSlice_max_val {{parent.max_value+fabs(parent.min_value)}}
  PlotSlice_min_val {{parent.min_value}}
  PlotSlice_draw_lines {{parent.draw_lines}}
  PlotSlice_tolerance 1.01
  PlotSlice_lines_color {{parent.lines_color.r} {parent.lines_color.g} {parent.lines_color.b}}
  rebuild_finalise ""
  name PlotSlice
  xpos -590
  ypos -328
 }
 Merge2 {
  inputs 2
  bbox B
  name Switch_Method
  xpos -590
  ypos -274
  disable {{parent.antialias}}
 }
 Matrix {
  channels rgba
  matrix {
      {1 2 1}
      {2 4 2}
      {1 2 1}
    }
  normalize true
  name Antialias
  xpos -590
  ypos -226
 }
 Keyer {
  operation "luminance key"
  name Keyer1
  xpos -590
  ypos -184
 }
set N40095600 [stack 0]
push $N400cf200
 ContactSheet {
  inputs 2
  width {{Input.width}}
  height {{Input.height*2}}
  rows 2
  columns 1
  roworder TopBottom
  name ContactSheet2
  label Bottom
  xpos -370
  ypos -184
 }
push $N40095600
push $N400cf200
 ContactSheet {
  inputs 2
  width {{Input.width*2}}
  height {{Input.height}}
  rows 1
  columns 2
  name ContactSheet1
  label Right
  xpos -480
  ypos -184
 }
push $N40095600
push $N400cf900
 Merge2 {
  inputs 2
  name Merge1
  xpos -810
  ypos -178
 }
push $N40095600
 Switch {
  inputs 4
  which {{parent.style}}
  name switch_plot_type
  xpos -810
  ypos -106
 }
 Output {
  name Output
  xpos -810
  ypos -34
 }
end_group
Constant {
 inputs 0
 format "1024 1024 0 0 1024 1024 1 square_1K"
 name Constant1
 note_font Helvetica
 xpos -590
 ypos 1719
 postage_stamp false
}
Ramp {
 p0 {0 0}
 p1 {{width} 0}
 color {{parent.PlotSlice2.max_value-parent.PlotSlice2.min_value}}
 name Ramp2
 note_font Helvetica
 xpos -590
 ypos 1743
}
Add {
 channels rgba
 value {{parent.PlotSlice2.min_value}}
 name Add1
 note_font Helvetica
 xpos -590
 ypos 1767
}
Dot {
 name Dot1
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos -556
 ypos 1842
}
set N4005c100 [stack 0]
Gamma {
 channels rgba
 value {{parent.Grade4.gamma}}
 name Gamma3
 note_font Helvetica
 xpos -590
 ypos 1887
}
Dot {
 name Dot2
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos -556
 ypos 2010
}
Group {
 name PlotSlice2
 xpos -370
 ypos 2006
 addUserKnob {20 PlotSlice_tab l PlotSlice}
 addUserKnob {41 useGPUIfAvailable l "Use GPU if available" T PlotSlice.useGPUIfAvailable}
 addUserKnob {12 pos1 l p1}
 addUserKnob {12 pos2 l p2 -STARTLINE}
 pos2 {{width} 0}
 addUserKnob {7 max_value l "max value" R 1 10}
 max_value 10
 addUserKnob {7 min_value l "min value" R -1 0}
 min_value -0.1
 addUserKnob {4 style M {replace over right bottom ""}}
 addUserKnob {6 antialias t "enable antialiasing. prettier, at the cost of speed." -STARTLINE}
 antialias true
 addUserKnob {6 draw_lines l "draw lines" t "draw horizontal lines every whole number" -STARTLINE}
 draw_lines true
 addUserKnob {18 lines_color l "lines color"}
 lines_color 0.1
 addUserKnob {6 lines_color_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
}
 Input {
  inputs 0
  name Input
  xpos -810
  ypos -658
 }
 Dot {
  name Dot13
  note_font_size 42
  note_font_color 0x7f7f7f01
  xpos -776
  ypos -558
 }
set N4003cf00 [stack 0]
 Dot {
  name Dot12
  note_font_size 42
  note_font_color 0x7f7f7f01
  xpos -556
  ypos -558
 }
set N4003c800 [stack 0]
 Transform {
  translate {{-parent.pos1} {-parent.pos1}}
  black_outside false
  name Transform4
  label T
  xpos -590
  ypos -520
 }
 Transform {
  rotate {{"-degrees( atan2(parent.pos2.y-parent.pos1.y, parent.pos2.x-parent.pos1.x) )"}}
  black_outside false
  name Transform5
  label "R\n"
  xpos -590
  ypos -472
 }
 Transform {
  scale {{"width / sqrt(pow(parent.pos2.x-parent.pos1.x,2) + pow(parent.pos2.y-parent.pos1.y,2))"}}
  black_outside false
  name Transform6
  label S
  xpos -590
  ypos -424
 }
set N381df200 [stack 0]
 Crop {
  box {0 0 {Input.width} 1}
  reformat true
  crop false
  name Crop1
  xpos -700
  ypos -418
 }
 Expression {
  expr0 r/max_val-(min_val/max_val)
  expr1 g/max_val-(min_val/max_val)
  expr2 b/max_val-(min_val/max_val)
  expr3 a/max_val-(min_val/max_val)
  name Fit
  xpos -700
  ypos -394
  addUserKnob {20 Param}
  addUserKnob {7 max_val R 1 10}
  max_val {{parent.max_value+fabs(parent.min_value)}}
  addUserKnob {7 min_val R -1 0}
  min_val {{parent.min_value}}
 }
 Reformat {
  type "to box"
  box_width {{Input.width}}
  box_height {{Input.height}}
  box_fixed true
  resize distort
  filter impulse
  name Reformat1
  xpos -700
  ypos -370
 }
 Expression {
  temp_name0 c
  temp_expr0 0.8
  expr0 "fabs((y/height)-r)<=tolerance ? c : 0"
  expr1 "fabs((y/height)-g)<=tolerance ? c : 0"
  expr2 "fabs((y/height)-b)<=tolerance ? c : 0"
  expr3 "fabs((y/height)-a)<=tolerance ? c : 0"
  name PlotSlice_
  xpos -700
  ypos -344
  addUserKnob {20 User}
  addUserKnob {7 tolerance}
  tolerance 0.0007
 }
push $N381df200
 Reformat {
  type "to box"
  box_width {{"\[exists input] ? input.width : root.width"}}
  box_height {{"\[exists input] ? input.height : root.height"}}
  box_fixed true
  box_pixel_aspect {{"\[exists input] ? input.pixel_aspect : root.pixel_aspect"}}
  resize none
  black_outside true
  name BboxRemove
  xpos -590
  ypos -370
 }
 BlinkScript {
  recompileCount 3
  KernelDescription "2 \"PlotSlice\" iterate pixelWise a85c49a08f78aaad29c10667611d0922f3ade835175dd677155ef71c6ca45491 2 \"src\" Read Random \"dst\" Write Random 7 \"plot_input\" Bool 1 AA== \"color\" Float 1 AAAAAA== \"max_val\" Float 1 AAAAAA== \"min_val\" Float 1 AAAAAA== \"draw_lines\" Bool 1 AA== \"tolerance\" Float 1 AAAAAA== \"lines_color\" Float 3 AAAAAAAAAAAAAAAAAAAAAA== 7 \"plot_input\" 1 1 \"color\" 1 1 \"max_val\" 1 1 \"min_val\" 1 1 \"draw_lines\" 1 1 \"tolerance\" 1 1 \"lines_color\" 3 1 0"
  kernelSource "kernel PlotSlice : public ImageComputationKernel<ePixelWise>\n\{\n  Image<eRead, eAccessRandom, eEdgeClamped> src;\n  Image<eWrite, eAccessRandom> dst;\n\n  param:\n    bool plot_input;\n    float color;\n    float max_val;\n    float min_val;\n    bool draw_lines;\n    float tolerance;\n    float3 lines_color;\n\n  float gaussian(float d, float a, float expv) \{\n    return max(0.0f, exp(-a*d*d)-expv);\n  \}\n\n  float gaussian_filter(float x, float y, float r) \{\n    // return gaussian weighted distance from origin (0, 0)\n    // given coordinate (x, y) and radius r\n    float a = 1.5f; // rate falloff\n    float expv = exp(-a*r*r);\n    return gaussian(x, a, expv) * gaussian(y, a, expv);\n  \}\n\n  void write(float x, float y, int k, float c) \{\n    int n = 2;\n    int u0 = round(x);\n    int v0 = round(y);\n    // skip if center pixel weight is greater than tolerance\n    // if ( dst.bounds.inside(u0, v0)) \{\n    //   if (dst(u0, v0, 3) >= tolerance) return;\n    // \}\n    // loop over neighborhood\n    for (int j = -n; j <= n; j++) \{\n      int v = v0 + j;\n      for (int i = -n; i <= n; i++) \{\n        int u = u0 + i;\n        if ( dst.bounds.inside(u, v)) \{\n          // get filter weight for coord (u,v)\n          float w = gaussian_filter(u-x, v-y, float(n));\n          float c0 = dst(u, v, k); // existing color\n          float w0 = dst(u, v, 3); // existing alpha\n          // merge current color sample over existing color sample\n          dst(u, v, k) = c*w+c0*(1-w);\n          // merge current weight over existing weight\n          dst(u, v, 3) = w+w0*(1-w);\n        \}\n      \}\n    \}\n  \}\n\n  float scale(float x) \{\n    return (x*dst.bounds.height())/(max_val)-((min_val/max_val)*dst.bounds.height());\n  \}\n\n  void process(int2 pos) \{\n    if (pos.y == 0) \{\n      if (draw_lines) \{\n        for (int i = 0; i < max_val; i++) \{\n          for (int k = 0; k < 3; k++) \{\n            write(pos.x, scale(i), k, lines_color\[k]);\n          \}\n        \}\n      \}\n      if (plot_input) \{\n        float4 source = src(pos.x, pos.y);\n        for (int i = 0; i < 3; i++)\{\n          write(pos.x, scale(source\[i]), i, color);\n        \}\n      \}\n    \}\n  \}\n\};"
  rebuild ""
  PlotSlice_plot_input {{parent.antialias}}
  PlotSlice_color 0.6
  PlotSlice_max_val {{parent.max_value+fabs(parent.min_value)}}
  PlotSlice_min_val {{parent.min_value}}
  PlotSlice_draw_lines {{parent.draw_lines}}
  PlotSlice_tolerance 1.01
  PlotSlice_lines_color {{parent.lines_color.r} {parent.lines_color.g} {parent.lines_color.b}}
  rebuild_finalise ""
  name PlotSlice
  xpos -590
  ypos -328
 }
 Merge2 {
  inputs 2
  bbox B
  name Switch_Method
  xpos -590
  ypos -274
  disable {{parent.antialias}}
 }
 Matrix {
  channels rgba
  matrix {
      {1 2 1}
      {2 4 2}
      {1 2 1}
    }
  normalize true
  name Antialias
  xpos -590
  ypos -226
 }
 Keyer {
  operation "luminance key"
  name Keyer1
  xpos -590
  ypos -184
 }
set N3819eb00 [stack 0]
push $N4003c800
 ContactSheet {
  inputs 2
  width {{Input.width}}
  height {{Input.height*2}}
  rows 2
  columns 1
  roworder TopBottom
  name ContactSheet2
  label Bottom
  xpos -370
  ypos -184
 }
push $N3819eb00
push $N4003c800
 ContactSheet {
  inputs 2
  width {{Input.width*2}}
  height {{Input.height}}
  rows 1
  columns 2
  name ContactSheet1
  label Right
  xpos -480
  ypos -184
 }
push $N3819eb00
push $N4003cf00
 Merge2 {
  inputs 2
  name Merge1
  xpos -810
  ypos -178
 }
push $N3819eb00
 Switch {
  inputs 4
  which {{parent.style}}
  name switch_plot_type
  xpos -810
  ypos -106
 }
 Output {
  name Output
  xpos -810
  ypos -34
 }
end_group
push $N4005c100
Grade {
 gamma 0.5
 black_clamp false
 name Grade4
 note_font Helvetica
 xpos -480
 ypos 1887
}
push $N4005c100
Expression {
 expr0 "r > 1 ? r*1/gamma-1/gamma+1:pow(r,1/gamma)"
 expr1 "g > 1 ? g*1/gamma-1/gamma+1:pow(g,1/gamma)"
 expr2 "b > 1 ?b*1/gamma-1/gamma+1:pow(b,1/gamma)"
 name Expression2
 note_font Helvetica
 xpos -370
 ypos 1887
 addUserKnob {20 User}
 addUserKnob {7 gamma R 0 4}
 gamma {{parent.Grade4.gamma}}
}
push $N400fab00
Multiply {
 channels rgb
 value 0.25
 name Multiply3
 note_font Helvetica
 xpos -480
 ypos 2775
}
push $N400fab00
Expression {
 expr0 r*pow(2,parent.Exposure.red)
 expr1 g*pow(2,parent.Exposure.green)
 expr2 b*pow(2,parent.Exposure.blue)
 name Expression1
 label "value * 2^exposure"
 note_font Helvetica
 xpos -370
 ypos 2769
}
EXPTool {
 inputs 0
 mode Stops
 name Exposure1
 note_font Helvetica
 xpos -260
 ypos -1017
}
Log2Lin {
 inputs 0
 name Log2Lin1
 note_font Helvetica
 xpos -150
 ypos -1017
}
Invert {
 inputs 0
 channels rgba
 name Invert1
 note_font Helvetica
 xpos 70
 ypos -1017
}
Constant {
 inputs 0
 format "1024 1024 0 0 1024 1024 1 square_1K"
 name Constant9
 note_font Helvetica
 xpos -590
 ypos 4431
 postage_stamp false
}
Ramp {
 p0 {0 0}
 p1 {{width} 0}
 color {{parent.PlotSlice7.max_value-parent.PlotSlice7.min_value}}
 name Ramp7
 note_font Helvetica
 xpos -590
 ypos 4455
}
Add {
 channels rgba
 value {{parent.PlotSlice7.min_value}}
 name Add9
 note_font Helvetica
 xpos -590
 ypos 4479
}
Dot {
 name Dot7
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos -556
 ypos 4554
}
Invert {
 channels rgba
 name Invert2
 note_font Helvetica
 xpos -590
 ypos 4623
}
Dot {
 name Dot8
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos -556
 ypos 4722
}
Group {
 name PlotSlice7
 xpos -370
 ypos 4718
 addUserKnob {20 PlotSlice_tab l PlotSlice}
 addUserKnob {41 useGPUIfAvailable l "Use GPU if available" T PlotSlice.useGPUIfAvailable}
 addUserKnob {12 pos1 l p1}
 addUserKnob {12 pos2 l p2 -STARTLINE}
 pos2 {{width} 0}
 addUserKnob {7 max_value l "max value" R 1 10}
 max_value 1.5
 addUserKnob {7 min_value l "min value" R -1 0}
 min_value -1
 addUserKnob {4 style M {replace over right bottom ""}}
 addUserKnob {6 antialias t "enable antialiasing. prettier, at the cost of speed." -STARTLINE}
 antialias true
 addUserKnob {6 draw_lines l "draw lines" t "draw horizontal lines every whole number" -STARTLINE}
 draw_lines true
 addUserKnob {18 lines_color l "lines color"}
 lines_color 0.1
 addUserKnob {6 lines_color_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
}
 Input {
  inputs 0
  name Input
  xpos -810
  ypos -658
 }
 Dot {
  name Dot13
  note_font_size 42
  note_font_color 0x7f7f7f01
  xpos -776
  ypos -558
 }
set N3810a400 [stack 0]
 Dot {
  name Dot12
  note_font_size 42
  note_font_color 0x7f7f7f01
  xpos -556
  ypos -558
 }
set N38109d00 [stack 0]
 Transform {
  translate {{-parent.pos1} {-parent.pos1}}
  black_outside false
  name Transform4
  label T
  xpos -590
  ypos -520
 }
 Transform {
  rotate {{"-degrees( atan2(parent.pos2.y-parent.pos1.y, parent.pos2.x-parent.pos1.x) )"}}
  black_outside false
  name Transform5
  label "R\n"
  xpos -590
  ypos -472
 }
 Transform {
  scale {{"width / sqrt(pow(parent.pos2.x-parent.pos1.x,2) + pow(parent.pos2.y-parent.pos1.y,2))"}}
  black_outside false
  name Transform6
  label S
  xpos -590
  ypos -424
 }
set N38108800 [stack 0]
 Crop {
  box {0 0 {Input.width} 1}
  reformat true
  crop false
  name Crop1
  xpos -700
  ypos -418
 }
 Expression {
  expr0 r/max_val-(min_val/max_val)
  expr1 g/max_val-(min_val/max_val)
  expr2 b/max_val-(min_val/max_val)
  expr3 a/max_val-(min_val/max_val)
  name Fit
  xpos -700
  ypos -394
  addUserKnob {20 Param}
  addUserKnob {7 max_val R 1 10}
  max_val {{parent.max_value+fabs(parent.min_value)}}
  addUserKnob {7 min_val R -1 0}
  min_val {{parent.min_value}}
 }
 Reformat {
  type "to box"
  box_width {{Input.width}}
  box_height {{Input.height}}
  box_fixed true
  resize distort
  filter impulse
  name Reformat1
  xpos -700
  ypos -370
 }
 Expression {
  temp_name0 c
  temp_expr0 0.8
  expr0 "fabs((y/height)-r)<=tolerance ? c : 0"
  expr1 "fabs((y/height)-g)<=tolerance ? c : 0"
  expr2 "fabs((y/height)-b)<=tolerance ? c : 0"
  expr3 "fabs((y/height)-a)<=tolerance ? c : 0"
  name PlotSlice_
  xpos -700
  ypos -344
  addUserKnob {20 User}
  addUserKnob {7 tolerance}
  tolerance 0.0007
 }
push $N38108800
 Reformat {
  type "to box"
  box_width {{"\[exists input] ? input.width : root.width"}}
  box_height {{"\[exists input] ? input.height : root.height"}}
  box_fixed true
  box_pixel_aspect {{"\[exists input] ? input.pixel_aspect : root.pixel_aspect"}}
  resize none
  black_outside true
  name BboxRemove
  xpos -590
  ypos -370
 }
 BlinkScript {
  recompileCount 3
  KernelDescription "2 \"PlotSlice\" iterate pixelWise a85c49a08f78aaad29c10667611d0922f3ade835175dd677155ef71c6ca45491 2 \"src\" Read Random \"dst\" Write Random 7 \"plot_input\" Bool 1 AA== \"color\" Float 1 AAAAAA== \"max_val\" Float 1 AAAAAA== \"min_val\" Float 1 AAAAAA== \"draw_lines\" Bool 1 AA== \"tolerance\" Float 1 AAAAAA== \"lines_color\" Float 3 AAAAAAAAAAAAAAAAAAAAAA== 7 \"plot_input\" 1 1 \"color\" 1 1 \"max_val\" 1 1 \"min_val\" 1 1 \"draw_lines\" 1 1 \"tolerance\" 1 1 \"lines_color\" 3 1 0"
  kernelSource "kernel PlotSlice : public ImageComputationKernel<ePixelWise>\n\{\n  Image<eRead, eAccessRandom, eEdgeClamped> src;\n  Image<eWrite, eAccessRandom> dst;\n\n  param:\n    bool plot_input;\n    float color;\n    float max_val;\n    float min_val;\n    bool draw_lines;\n    float tolerance;\n    float3 lines_color;\n\n  float gaussian(float d, float a, float expv) \{\n    return max(0.0f, exp(-a*d*d)-expv);\n  \}\n\n  float gaussian_filter(float x, float y, float r) \{\n    // return gaussian weighted distance from origin (0, 0)\n    // given coordinate (x, y) and radius r\n    float a = 1.5f; // rate falloff\n    float expv = exp(-a*r*r);\n    return gaussian(x, a, expv) * gaussian(y, a, expv);\n  \}\n\n  void write(float x, float y, int k, float c) \{\n    int n = 2;\n    int u0 = round(x);\n    int v0 = round(y);\n    // skip if center pixel weight is greater than tolerance\n    // if ( dst.bounds.inside(u0, v0)) \{\n    //   if (dst(u0, v0, 3) >= tolerance) return;\n    // \}\n    // loop over neighborhood\n    for (int j = -n; j <= n; j++) \{\n      int v = v0 + j;\n      for (int i = -n; i <= n; i++) \{\n        int u = u0 + i;\n        if ( dst.bounds.inside(u, v)) \{\n          // get filter weight for coord (u,v)\n          float w = gaussian_filter(u-x, v-y, float(n));\n          float c0 = dst(u, v, k); // existing color\n          float w0 = dst(u, v, 3); // existing alpha\n          // merge current color sample over existing color sample\n          dst(u, v, k) = c*w+c0*(1-w);\n          // merge current weight over existing weight\n          dst(u, v, 3) = w+w0*(1-w);\n        \}\n      \}\n    \}\n  \}\n\n  float scale(float x) \{\n    return (x*dst.bounds.height())/(max_val)-((min_val/max_val)*dst.bounds.height());\n  \}\n\n  void process(int2 pos) \{\n    if (pos.y == 0) \{\n      if (draw_lines) \{\n        for (int i = 0; i < max_val; i++) \{\n          for (int k = 0; k < 3; k++) \{\n            write(pos.x, scale(i), k, lines_color\[k]);\n          \}\n        \}\n      \}\n      if (plot_input) \{\n        float4 source = src(pos.x, pos.y);\n        for (int i = 0; i < 3; i++)\{\n          write(pos.x, scale(source\[i]), i, color);\n        \}\n      \}\n    \}\n  \}\n\};"
  rebuild ""
  PlotSlice_plot_input {{parent.antialias}}
  PlotSlice_color 0.6
  PlotSlice_max_val {{parent.max_value+fabs(parent.min_value)}}
  PlotSlice_min_val {{parent.min_value}}
  PlotSlice_draw_lines {{parent.draw_lines}}
  PlotSlice_tolerance 1.01
  PlotSlice_lines_color {{parent.lines_color.r} {parent.lines_color.g} {parent.lines_color.b}}
  rebuild_finalise ""
  name PlotSlice
  xpos -590
  ypos -328
 }
 Merge2 {
  inputs 2
  bbox B
  name Switch_Method
  xpos -590
  ypos -274
  disable {{parent.antialias}}
 }
 Matrix {
  channels rgba
  matrix {
      {1 2 1}
      {2 4 2}
      {1 2 1}
    }
  normalize true
  name Antialias
  xpos -590
  ypos -226
 }
 Keyer {
  operation "luminance key"
  name Keyer1
  xpos -590
  ypos -184
 }
set N214a0100 [stack 0]
push $N38109d00
 ContactSheet {
  inputs 2
  width {{Input.width}}
  height {{Input.height*2}}
  rows 2
  columns 1
  roworder TopBottom
  name ContactSheet2
  label Bottom
  xpos -370
  ypos -184
 }
push $N214a0100
push $N38109d00
 ContactSheet {
  inputs 2
  width {{Input.width*2}}
  height {{Input.height}}
  rows 1
  columns 2
  name ContactSheet1
  label Right
  xpos -480
  ypos -184
 }
push $N214a0100
push $N3810a400
 Merge2 {
  inputs 2
  name Merge1
  xpos -810
  ypos -178
 }
push $N214a0100
 Switch {
  inputs 4
  which {{parent.style}}
  name switch_plot_type
  xpos -810
  ypos -106
 }
 Output {
  name Output
  xpos -810
  ypos -34
 }
end_group
Toe2 {
 inputs 0
 name Toe1
 note_font Helvetica
 xpos -40
 ypos -1017
}
Constant {
 inputs 0
 format "1024 1024 0 0 1024 1024 1 square_1K"
 name Constant10
 note_font Helvetica
 xpos -590
 ypos 5439
 postage_stamp false
}
Ramp {
 p0 {0 0}
 p1 {{width} 0}
 color {{parent.PlotSlice9.max_value-parent.PlotSlice9.min_value}}
 name Ramp8
 note_font Helvetica
 xpos -590
 ypos 5463
}
Add {
 channels rgba
 value {{parent.PlotSlice9.min_value}}
 name Add10
 note_font Helvetica
 xpos -590
 ypos 5487
}
Dot {
 name Dot13
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos -556
 ypos 5562
}
Group {
 name CompressToe
 xpos -590
 ypos 5647
 addUserKnob {20 CompressToe_tab l CompressToe}
 addUserKnob {41 channels T NodeWrapper.channels}
 addUserKnob {18 pivot t "The minimum pivot. Values above this number will not be affected."}
 pivot 0.18
 addUserKnob {6 pivot_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {18 lift t "Amount to lift the toe. 0 is no change. 1 is lifted to the value of pivot."}
 lift 0.68
 addUserKnob {6 lift_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {18 power t "The slope of the curve, or how far below 0 the curve intersects 0 on the x axis. 0 is a linear break. 1 is equal to Reinhard. Higher values have C2 continuity." R 1 4}
 power 1.67
 addUserKnob {6 power_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {18 slope t "The slope of the curve. In most cases this can be left at the default of 0.8" +INVISIBLE}
 slope 0.8
 addUserKnob {6 slope_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 reverse t "Invert the operation." +STARTLINE}
}
 Input {
  inputs 0
  name Inputmask
  xpos -920
  ypos 878
  number 1
 }
 Input {
  inputs 0
  name Input
  xpos -1140
  ypos 614
 }
 Expression {
  expr0 1-r
  expr1 1-g
  expr2 1-b
  name Complement
  note_font Helvetica
  xpos -1140
  ypos 663
 }
 Dot {
  name Dot1
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xff
  xpos -1106
  ypos 714
 }
set N21429d00 [stack 0]
 Expression {
  expr0 r<t.r||x0.r<1.0001?r:r>(t.r+s.r)?r+t.r+s.r:t.r+s.r*pow(-(pow((r-t.r)/s.r,p)/(pow((r-t.r)/s.r,p)-1)),1/p)
  expr1 g<t.g||x0.g<1.0001?g:g>(t.g+s.g)?g+t.g+s.g:t.g+s.g*pow(-(pow((g-t.g)/s.g,p)/(pow((g-t.g)/s.g,p)-1)),1/p)
  expr2 b<t.b||x0.b<1.0001?b:b>(t.b+s.b)?b+t.b+s.b:t.b+s.b*pow(-(pow((b-t.b)/s.b,p)/(pow((b-t.b)/s.b,p)-1)),1/p)
  name uncompress
  xpos -1030
  ypos 734
  addUserKnob {20 Params_tab l Params}
  addUserKnob {18 t}
  t {{parent.compress.t} {parent.compress.t} {parent.compress.t}}
  addUserKnob {6 t_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {18 x0}
  x0 {{parent.compress.x0} {parent.compress.x0} {parent.compress.x0}}
  addUserKnob {6 x0_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {18 y0}
  y0 {{parent.compress.y0} {parent.compress.y0} {parent.compress.y0}}
  addUserKnob {6 y0_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {18 p R 1 5}
  p {{parent.compress.p} {parent.compress.p} {parent.compress.p}}
  addUserKnob {6 p_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {18 s}
  s {{parent.compress.s} {parent.compress.s} {parent.compress.s}}
  addUserKnob {6 s_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 }
push $N21429d00
 Expression {
  expr0 r<t.r||x0.r<1.0001?r:t.r+s.r*((r-t.r)/s.r)/(pow(1+pow((r-t.r)/s.r,p),1/p))
  expr1 g<t.g||x0.g<1.0001?g:t.g+s.g*((g-t.g)/s.g)/(pow(1+pow((g-t.g)/s.g,p),1/p))
  expr2 b<t.b||x0.b<1.0001?b:t.b+s.b*((b-t.b)/s.b)/(pow(1+pow((b-t.b)/s.b,p),1/p))
  name compress
  xpos -1250
  ypos 734
  addUserKnob {20 Params_tab l Params}
  addUserKnob {18 t}
  t {{1-max(0.01,parent.pivot)} {1-max(0.01,parent.pivot)} {1-max(0.01,parent.pivot)}}
  addUserKnob {6 t_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {18 x0}
  x0 {{1/(min(0.999,max(0.0001,parent.slope)))}}
  addUserKnob {6 x0_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {18 y0}
  y0 {{this.t+((1-min(0.999,max(0.0001,parent.lift)))*(x0-this.t))} {this.t+((1-min(0.999,max(0.0001,parent.lift)))*(x0-this.t))} {this.t+((1-min(0.999,max(0.0001,parent.lift)))*(x0-this.t))}}
  addUserKnob {6 y0_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {18 p R 1 5}
  p {{"parent.power < 0.1 ? 0.1 : parent.power"} {"parent.power < 0.1 ? 0.1 : parent.power"} {"parent.power < 0.1 ? 0.1 : parent.power"}}
  addUserKnob {6 p_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {18 s}
  s {{min(100000,(x0-this.t)/pow(pow((y0-this.t)/(x0-this.t),-p)-1,1/p))} {min(100000,(x0-this.t)/pow(pow((y0-this.t)/(x0-this.t),-p)-1,1/p))} {min(100000,(x0-this.t)/pow(pow((y0-this.t)/(x0-this.t),-p)-1,1/p))}}
  addUserKnob {6 s_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 }
 Switch {
  inputs 2
  which {{parent.reverse}}
  name switch_reverse
  xpos -1140
  ypos 795
 }
 Expression {
  expr0 1-r
  expr1 1-g
  expr2 1-b
  name Complement1
  note_font Helvetica
  xpos -1140
  ypos 831
 }
push $N21429d00
 NodeWrapper {
  inputs 2+1
  channels rgb
  name NodeWrapper
  xpos -1140
  ypos 878
 }
 Output {
  name Output
  xpos -1140
  ypos 974
 }
end_group
Dot {
 name Dot14
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos -556
 ypos 5730
}
Group {
 name PlotSlice9
 xpos -370
 ypos 5726
 addUserKnob {20 PlotSlice_tab l PlotSlice}
 addUserKnob {41 useGPUIfAvailable l "Use GPU if available" T PlotSlice.useGPUIfAvailable}
 addUserKnob {12 pos1 l p1}
 addUserKnob {12 pos2 l p2 -STARTLINE}
 pos2 {{width} 0}
 addUserKnob {7 max_value l "max value" R 1 10}
 max_value 1.1
 addUserKnob {7 min_value l "min value" R -1 0}
 min_value -0.1
 addUserKnob {4 style M {replace over right bottom ""}}
 addUserKnob {6 antialias t "enable antialiasing. prettier, at the cost of speed." -STARTLINE}
 antialias true
 addUserKnob {6 draw_lines l "draw lines" t "draw horizontal lines every whole number" -STARTLINE}
 draw_lines true
 addUserKnob {18 lines_color l "lines color"}
 lines_color 0.1
 addUserKnob {6 lines_color_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
}
 Input {
  inputs 0
  name Input
  xpos -810
  ypos -658
 }
 Dot {
  name Dot13
  note_font_size 42
  note_font_color 0x7f7f7f01
  xpos -776
  ypos -558
 }
set N213f4800 [stack 0]
 Dot {
  name Dot12
  note_font_size 42
  note_font_color 0x7f7f7f01
  xpos -556
  ypos -558
 }
set N213f4100 [stack 0]
 Transform {
  translate {{-parent.pos1} {-parent.pos1}}
  black_outside false
  name Transform4
  label T
  xpos -590
  ypos -520
 }
 Transform {
  rotate {{"-degrees( atan2(parent.pos2.y-parent.pos1.y, parent.pos2.x-parent.pos1.x) )"}}
  black_outside false
  name Transform5
  label "R\n"
  xpos -590
  ypos -472
 }
 Transform {
  scale {{"width / sqrt(pow(parent.pos2.x-parent.pos1.x,2) + pow(parent.pos2.y-parent.pos1.y,2))"}}
  black_outside false
  name Transform6
  label S
  xpos -590
  ypos -424
 }
set N213dab00 [stack 0]
 Crop {
  box {0 0 {Input.width} 1}
  reformat true
  crop false
  name Crop1
  xpos -700
  ypos -418
 }
 Expression {
  expr0 r/max_val-(min_val/max_val)
  expr1 g/max_val-(min_val/max_val)
  expr2 b/max_val-(min_val/max_val)
  expr3 a/max_val-(min_val/max_val)
  name Fit
  xpos -700
  ypos -394
  addUserKnob {20 Param}
  addUserKnob {7 max_val R 1 10}
  max_val {{parent.max_value+fabs(parent.min_value)}}
  addUserKnob {7 min_val R -1 0}
  min_val {{parent.min_value}}
 }
 Reformat {
  type "to box"
  box_width {{Input.width}}
  box_height {{Input.height}}
  box_fixed true
  resize distort
  filter impulse
  name Reformat1
  xpos -700
  ypos -370
 }
 Expression {
  temp_name0 c
  temp_expr0 0.8
  expr0 "fabs((y/height)-r)<=tolerance ? c : 0"
  expr1 "fabs((y/height)-g)<=tolerance ? c : 0"
  expr2 "fabs((y/height)-b)<=tolerance ? c : 0"
  expr3 "fabs((y/height)-a)<=tolerance ? c : 0"
  name PlotSlice_
  xpos -700
  ypos -344
  addUserKnob {20 User}
  addUserKnob {7 tolerance}
  tolerance 0.0007
 }
push $N213dab00
 Reformat {
  type "to box"
  box_width {{"\[exists input] ? input.width : root.width"}}
  box_height {{"\[exists input] ? input.height : root.height"}}
  box_fixed true
  box_pixel_aspect {{"\[exists input] ? input.pixel_aspect : root.pixel_aspect"}}
  resize none
  black_outside true
  name BboxRemove
  xpos -590
  ypos -370
 }
 BlinkScript {
  recompileCount 3
  KernelDescription "2 \"PlotSlice\" iterate pixelWise a85c49a08f78aaad29c10667611d0922f3ade835175dd677155ef71c6ca45491 2 \"src\" Read Random \"dst\" Write Random 7 \"plot_input\" Bool 1 AA== \"color\" Float 1 AAAAAA== \"max_val\" Float 1 AAAAAA== \"min_val\" Float 1 AAAAAA== \"draw_lines\" Bool 1 AA== \"tolerance\" Float 1 AAAAAA== \"lines_color\" Float 3 AAAAAAAAAAAAAAAAAAAAAA== 7 \"plot_input\" 1 1 \"color\" 1 1 \"max_val\" 1 1 \"min_val\" 1 1 \"draw_lines\" 1 1 \"tolerance\" 1 1 \"lines_color\" 3 1 0"
  kernelSource "kernel PlotSlice : public ImageComputationKernel<ePixelWise>\n\{\n  Image<eRead, eAccessRandom, eEdgeClamped> src;\n  Image<eWrite, eAccessRandom> dst;\n\n  param:\n    bool plot_input;\n    float color;\n    float max_val;\n    float min_val;\n    bool draw_lines;\n    float tolerance;\n    float3 lines_color;\n\n  float gaussian(float d, float a, float expv) \{\n    return max(0.0f, exp(-a*d*d)-expv);\n  \}\n\n  float gaussian_filter(float x, float y, float r) \{\n    // return gaussian weighted distance from origin (0, 0)\n    // given coordinate (x, y) and radius r\n    float a = 1.5f; // rate falloff\n    float expv = exp(-a*r*r);\n    return gaussian(x, a, expv) * gaussian(y, a, expv);\n  \}\n\n  void write(float x, float y, int k, float c) \{\n    int n = 2;\n    int u0 = round(x);\n    int v0 = round(y);\n    // skip if center pixel weight is greater than tolerance\n    // if ( dst.bounds.inside(u0, v0)) \{\n    //   if (dst(u0, v0, 3) >= tolerance) return;\n    // \}\n    // loop over neighborhood\n    for (int j = -n; j <= n; j++) \{\n      int v = v0 + j;\n      for (int i = -n; i <= n; i++) \{\n        int u = u0 + i;\n        if ( dst.bounds.inside(u, v)) \{\n          // get filter weight for coord (u,v)\n          float w = gaussian_filter(u-x, v-y, float(n));\n          float c0 = dst(u, v, k); // existing color\n          float w0 = dst(u, v, 3); // existing alpha\n          // merge current color sample over existing color sample\n          dst(u, v, k) = c*w+c0*(1-w);\n          // merge current weight over existing weight\n          dst(u, v, 3) = w+w0*(1-w);\n        \}\n      \}\n    \}\n  \}\n\n  float scale(float x) \{\n    return (x*dst.bounds.height())/(max_val)-((min_val/max_val)*dst.bounds.height());\n  \}\n\n  void process(int2 pos) \{\n    if (pos.y == 0) \{\n      if (draw_lines) \{\n        for (int i = 0; i < max_val; i++) \{\n          for (int k = 0; k < 3; k++) \{\n            write(pos.x, scale(i), k, lines_color\[k]);\n          \}\n        \}\n      \}\n      if (plot_input) \{\n        float4 source = src(pos.x, pos.y);\n        for (int i = 0; i < 3; i++)\{\n          write(pos.x, scale(source\[i]), i, color);\n        \}\n      \}\n    \}\n  \}\n\};"
  rebuild ""
  PlotSlice_plot_input {{parent.antialias}}
  PlotSlice_color 0.6
  PlotSlice_max_val {{parent.max_value+fabs(parent.min_value)}}
  PlotSlice_min_val {{parent.min_value}}
  PlotSlice_draw_lines {{parent.draw_lines}}
  PlotSlice_tolerance 1.01
  PlotSlice_lines_color {{parent.lines_color.r} {parent.lines_color.g} {parent.lines_color.b}}
  rebuild_finalise ""
  name PlotSlice
  xpos -590
  ypos -328
 }
 Merge2 {
  inputs 2
  bbox B
  name Switch_Method
  xpos -590
  ypos -274
  disable {{parent.antialias}}
 }
 Matrix {
  channels rgba
  matrix {
      {1 2 1}
      {2 4 2}
      {1 2 1}
    }
  normalize true
  name Antialias
  xpos -590
  ypos -226
 }
 Keyer {
  operation "luminance key"
  name Keyer1
  xpos -590
  ypos -184
 }
set N232fe400 [stack 0]
push $N213f4100
 ContactSheet {
  inputs 2
  width {{Input.width}}
  height {{Input.height*2}}
  rows 2
  columns 1
  roworder TopBottom
  name ContactSheet2
  label Bottom
  xpos -370
  ypos -184
 }
push $N232fe400
push $N213f4100
 ContactSheet {
  inputs 2
  width {{Input.width*2}}
  height {{Input.height}}
  rows 1
  columns 2
  name ContactSheet1
  label Right
  xpos -480
  ypos -184
 }
push $N232fe400
push $N213f4800
 Merge2 {
  inputs 2
  name Merge1
  xpos -810
  ypos -178
 }
push $N232fe400
 Switch {
  inputs 4
  which {{parent.style}}
  name switch_plot_type
  xpos -810
  ypos -106
 }
 Output {
  name Output
  xpos -810
  ypos -34
 }
end_group
Toe2 {
 inputs 0
 name Toe2
 note_font Helvetica
 xpos -700
 ypos 5630
}
Group {
 inputs 0
 name ToeReversible
 tile_color 0x7aa9ffff
 xpos -752
 ypos 5702
 addUserKnob {20 Toe}
 addUserKnob {18 lift}
 lift 0.5
 addUserKnob {6 lift_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {18 pivot}
 pivot 0.18
 addUserKnob {6 pivot_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {7 soften}
 soften 1
 addUserKnob {7 pre_offset t "if soften != 0, negative values will be clipped. This adds a value to the pixels before processing and then reverses to counteract it" R 0 0.1}
 pre_offset 0.1
 addUserKnob {6 invert +STARTLINE}
}
 Input {
  inputs 0
  name Input
  xpos -576
  ypos 39
 }
 Dot {
  name Dot2
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -542
  ypos 83
 }
set N232d0f00 [stack 0]
 Dot {
  name Dot3
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -810
  ypos 83
 }
 Expression {
  temp_name0 t_g
  temp_expr0 pow(r/pivot.r,1/soften)*pivot.r
  temp_name1 t_l
  temp_expr1 "(r-pivot.r)*(1-lift.r) + pivot.r"
  temp_name2 ti_l
  temp_expr2 "(r-pivot.r)/(1-lift.r) + pivot.r"
  temp_name3 ti_g
  temp_expr3 pow(ti_l/pivot.r,1/(1/soften))*pivot.r
  expr0 "r > pivot.r ? r : invert ? ((r-pivot.r)/(1-lift.r) + pivot.r) : ((r-pivot.r)*(1-lift.r) + pivot.r)"
  expr1 "g > pivot.g ? g : invert ? ((g-pivot.g)/(1-lift.g) + pivot.g) : ((g-pivot.g)*(1-lift.g) + pivot.g)"
  expr2 "b > pivot.b ? b : invert ? ((b-pivot.b)/(1-lift.b) + pivot.b) : ((b-pivot.b)*(1-lift.b) + pivot.b)"
  expr3 a
  name Toe_NoSoft
  xpos -844
  ypos 238
  addUserKnob {20 User}
  addUserKnob {6 pivot_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {18 lift}
  lift {{parent.lift} {parent.lift} {parent.lift}}
  addUserKnob {6 lift_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {18 pivot}
  pivot {{parent.pivot}}
  addUserKnob {6 pivot_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {6 invert +STARTLINE}
  invert {{parent.invert}}
 }
 Dot {
  name Dot4
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -810
  ypos 474
 }
push $N232d0f00
 Add {
  channels rgb
  value {{parent.pre_offset}}
  name PRE_OFFSET
  xpos -576
  ypos 119
 }
 Dot {
  name Dot1
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -542
  ypos 163
 }
set N232a9600 [stack 0]
 Expression {
  temp_name0 t_g
  temp_expr0 pow(r/pivot.r,1/soften)*pivot.r
  temp_name1 t_l
  temp_expr1 "(t_g-pivot.r)*(1-lift.r) + pivot.r"
  temp_name2 ti_l
  temp_expr2 "(r-pivot.r)/(1-lift.r) + pivot.r"
  temp_name3 ti_g
  temp_expr3 pow(ti_l/pivot.r,1/(1/soften))*pivot.r
  expr0 "r > pivot.r ? r : invert ? ti_g : t_l"
  expr1 0
  expr2 0
  expr3 a
  name Toe_R
  xpos -710
  ypos 240
  addUserKnob {20 User}
  addUserKnob {6 pivot_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {18 lift}
  lift {{parent.lift} {parent.lift} {parent.lift}}
  addUserKnob {6 lift_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {18 pivot}
  pivot {{parent.pivot+parent.pre_offset}}
  addUserKnob {6 pivot_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {7 soften}
  soften {{(1-(parent.soften*parent.lift.r))}}
  addUserKnob {6 invert +STARTLINE}
  invert {{parent.invert}}
 }
push 0
push $N232a9600
 Expression {
  temp_name0 t_g
  temp_expr0 pow(b/pivot.b,1/soften)*pivot.b
  temp_name1 t_l
  temp_expr1 "(t_g-pivot.b)*(1-lift.b) + pivot.b"
  temp_name2 ti_l
  temp_expr2 "(b-pivot.b)/(1-lift.b) + pivot.b"
  temp_name3 ti_g
  temp_expr3 pow(ti_l/pivot.b,1/(1/soften))*pivot.b
  expr0 0
  expr1 0
  expr2 "b > pivot.b ? b : invert ? ti_g : t_l"
  expr3 a
  name Toe_B
  xpos -442
  ypos 239
  addUserKnob {20 User}
  addUserKnob {6 pivot_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {18 lift}
  lift {{parent.lift} {parent.lift} {parent.lift}}
  addUserKnob {6 lift_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {18 pivot}
  pivot {{parent.pivot+parent.pre_offset} {parent.pivot+parent.pre_offset} {parent.pivot+parent.pre_offset}}
  addUserKnob {6 pivot_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {7 soften}
  soften {{(1-(parent.soften*parent.lift.b))}}
  addUserKnob {6 invert +STARTLINE}
  invert {{parent.invert}}
 }
push $N232a9600
 Expression {
  temp_name0 t_g
  temp_expr0 pow(g/pivot.g,1/soften)*pivot.g
  temp_name1 t_l
  temp_expr1 "(t_g-pivot.g)*(1-lift.g) + pivot.g"
  temp_name2 ti_l
  temp_expr2 "(g-pivot.g)/(1-lift.g) + pivot.g"
  temp_name3 ti_g
  temp_expr3 pow(ti_l/pivot.g,1/(1/soften))*pivot.g
  expr0 0
  expr1 "g > pivot.g ? g : invert ? ti_g : t_l"
  expr2 0
  expr3 a
  name Toe_G
  xpos -576
  ypos 239
  addUserKnob {20 User}
  addUserKnob {6 pivot_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {18 lift}
  lift {{parent.lift} {parent.lift} {parent.lift}}
  addUserKnob {6 lift_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {18 pivot}
  pivot {{parent.pivot+parent.pre_offset} {parent.pivot+parent.pre_offset} {parent.pivot+parent.pre_offset}}
  addUserKnob {6 pivot_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {7 soften}
  soften {{(1-(parent.soften*parent.lift.g))}}
  addUserKnob {6 invert +STARTLINE}
  invert {{parent.invert}}
 }
 Merge2 {
  inputs 3+1
  operation plus
  bbox B
  output rgb
  name Merge1
  xpos -576
  ypos 319
 }
 Add {
  channels rgb
  value {{-parent.pre_offset}}
  name PRE_OFFSET_REVERSE
  xpos -576
  ypos 399
 }
 Switch {
  inputs 2
  which {{parent.soften==0}}
  name NO_SOFT
  xpos -576
  ypos 470
 }
 Output {
  name Output
  xpos -576
  ypos 590
 }
end_group
Grade {
 inputs 0
 black_clamp false
 name Grade2
 note_font Helvetica
 xpos -499
 ypos 5648
}
ColorLookup {
 inputs 0
 name ColorLookup1
 note_font Helvetica
 xpos -480
 ypos -1017
}
Constant {
 inputs 0
 format "1024 1024 0 0 1024 1024 1 square_1K"
 name Constant12
 note_font Helvetica
 xpos -480
 ypos 7479
 postage_stamp false
}
Ramp {
 p0 {0 0}
 p1 {{width} 0}
 color {{parent.PlotSlice11.max_value-parent.PlotSlice11.min_value}}
 name Ramp10
 note_font Helvetica
 xpos -480
 ypos 7503
}
Add {
 channels rgba
 value {{parent.PlotSlice11.min_value}}
 name Add12
 note_font Helvetica
 xpos -480
 ypos 7527
}
Dot {
 name Dot17
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos -446
 ypos 7602
}
ColorLookup {
 lut {master {curve C 0.001225590706 x0.5071058869 0.5071058869 x1 0.7669117451}
   red {}
   green {}
   blue {}
   alpha {}}
 name ColorLookup2
 note_font Helvetica
 xpos -480
 ypos 7695
}
Dot {
 name Dot18
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos -446
 ypos 7770
}
Group {
 name PlotSlice11
 xpos -260
 ypos 7766
 addUserKnob {20 PlotSlice_tab l PlotSlice}
 addUserKnob {41 useGPUIfAvailable l "Use GPU if available" T PlotSlice.useGPUIfAvailable}
 addUserKnob {12 pos1 l p1}
 addUserKnob {12 pos2 l p2 -STARTLINE}
 pos2 {{width} 0}
 addUserKnob {7 max_value l "max value" R 1 10}
 max_value 1.1
 addUserKnob {7 min_value l "min value" R -1 0}
 min_value -0.1
 addUserKnob {4 style M {replace over right bottom ""}}
 addUserKnob {6 antialias t "enable antialiasing. prettier, at the cost of speed." -STARTLINE}
 antialias true
 addUserKnob {6 draw_lines l "draw lines" t "draw horizontal lines every whole number" -STARTLINE}
 draw_lines true
 addUserKnob {18 lines_color l "lines color"}
 lines_color 0.1
 addUserKnob {6 lines_color_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
}
 Input {
  inputs 0
  name Input
  xpos -810
  ypos -658
 }
 Dot {
  name Dot13
  note_font_size 42
  note_font_color 0x7f7f7f01
  xpos -776
  ypos -558
 }
set N23227900 [stack 0]
 Dot {
  name Dot12
  note_font_size 42
  note_font_color 0x7f7f7f01
  xpos -556
  ypos -558
 }
set N23227200 [stack 0]
 Transform {
  translate {{-parent.pos1} {-parent.pos1}}
  black_outside false
  name Transform4
  label T
  xpos -590
  ypos -520
 }
 Transform {
  rotate {{"-degrees( atan2(parent.pos2.y-parent.pos1.y, parent.pos2.x-parent.pos1.x) )"}}
  black_outside false
  name Transform5
  label "R\n"
  xpos -590
  ypos -472
 }
 Transform {
  scale {{"width / sqrt(pow(parent.pos2.x-parent.pos1.x,2) + pow(parent.pos2.y-parent.pos1.y,2))"}}
  black_outside false
  name Transform6
  label S
  xpos -590
  ypos -424
 }
set N23225d00 [stack 0]
 Crop {
  box {0 0 {Input.width} 1}
  reformat true
  crop false
  name Crop1
  xpos -700
  ypos -418
 }
 Expression {
  expr0 r/max_val-(min_val/max_val)
  expr1 g/max_val-(min_val/max_val)
  expr2 b/max_val-(min_val/max_val)
  expr3 a/max_val-(min_val/max_val)
  name Fit
  xpos -700
  ypos -394
  addUserKnob {20 Param}
  addUserKnob {7 max_val R 1 10}
  max_val {{parent.max_value+fabs(parent.min_value)}}
  addUserKnob {7 min_val R -1 0}
  min_val {{parent.min_value}}
 }
 Reformat {
  type "to box"
  box_width {{Input.width}}
  box_height {{Input.height}}
  box_fixed true
  resize distort
  filter impulse
  name Reformat1
  xpos -700
  ypos -370
 }
 Expression {
  temp_name0 c
  temp_expr0 0.8
  expr0 "fabs((y/height)-r)<=tolerance ? c : 0"
  expr1 "fabs((y/height)-g)<=tolerance ? c : 0"
  expr2 "fabs((y/height)-b)<=tolerance ? c : 0"
  expr3 "fabs((y/height)-a)<=tolerance ? c : 0"
  name PlotSlice_
  xpos -700
  ypos -344
  addUserKnob {20 User}
  addUserKnob {7 tolerance}
  tolerance 0.0007
 }
push $N23225d00
 Reformat {
  type "to box"
  box_width {{"\[exists input] ? input.width : root.width"}}
  box_height {{"\[exists input] ? input.height : root.height"}}
  box_fixed true
  box_pixel_aspect {{"\[exists input] ? input.pixel_aspect : root.pixel_aspect"}}
  resize none
  black_outside true
  name BboxRemove
  xpos -590
  ypos -370
 }
 BlinkScript {
  recompileCount 3
  KernelDescription "2 \"PlotSlice\" iterate pixelWise a85c49a08f78aaad29c10667611d0922f3ade835175dd677155ef71c6ca45491 2 \"src\" Read Random \"dst\" Write Random 7 \"plot_input\" Bool 1 AA== \"color\" Float 1 AAAAAA== \"max_val\" Float 1 AAAAAA== \"min_val\" Float 1 AAAAAA== \"draw_lines\" Bool 1 AA== \"tolerance\" Float 1 AAAAAA== \"lines_color\" Float 3 AAAAAAAAAAAAAAAAAAAAAA== 7 \"plot_input\" 1 1 \"color\" 1 1 \"max_val\" 1 1 \"min_val\" 1 1 \"draw_lines\" 1 1 \"tolerance\" 1 1 \"lines_color\" 3 1 0"
  kernelSource "kernel PlotSlice : public ImageComputationKernel<ePixelWise>\n\{\n  Image<eRead, eAccessRandom, eEdgeClamped> src;\n  Image<eWrite, eAccessRandom> dst;\n\n  param:\n    bool plot_input;\n    float color;\n    float max_val;\n    float min_val;\n    bool draw_lines;\n    float tolerance;\n    float3 lines_color;\n\n  float gaussian(float d, float a, float expv) \{\n    return max(0.0f, exp(-a*d*d)-expv);\n  \}\n\n  float gaussian_filter(float x, float y, float r) \{\n    // return gaussian weighted distance from origin (0, 0)\n    // given coordinate (x, y) and radius r\n    float a = 1.5f; // rate falloff\n    float expv = exp(-a*r*r);\n    return gaussian(x, a, expv) * gaussian(y, a, expv);\n  \}\n\n  void write(float x, float y, int k, float c) \{\n    int n = 2;\n    int u0 = round(x);\n    int v0 = round(y);\n    // skip if center pixel weight is greater than tolerance\n    // if ( dst.bounds.inside(u0, v0)) \{\n    //   if (dst(u0, v0, 3) >= tolerance) return;\n    // \}\n    // loop over neighborhood\n    for (int j = -n; j <= n; j++) \{\n      int v = v0 + j;\n      for (int i = -n; i <= n; i++) \{\n        int u = u0 + i;\n        if ( dst.bounds.inside(u, v)) \{\n          // get filter weight for coord (u,v)\n          float w = gaussian_filter(u-x, v-y, float(n));\n          float c0 = dst(u, v, k); // existing color\n          float w0 = dst(u, v, 3); // existing alpha\n          // merge current color sample over existing color sample\n          dst(u, v, k) = c*w+c0*(1-w);\n          // merge current weight over existing weight\n          dst(u, v, 3) = w+w0*(1-w);\n        \}\n      \}\n    \}\n  \}\n\n  float scale(float x) \{\n    return (x*dst.bounds.height())/(max_val)-((min_val/max_val)*dst.bounds.height());\n  \}\n\n  void process(int2 pos) \{\n    if (pos.y == 0) \{\n      if (draw_lines) \{\n        for (int i = 0; i < max_val; i++) \{\n          for (int k = 0; k < 3; k++) \{\n            write(pos.x, scale(i), k, lines_color\[k]);\n          \}\n        \}\n      \}\n      if (plot_input) \{\n        float4 source = src(pos.x, pos.y);\n        for (int i = 0; i < 3; i++)\{\n          write(pos.x, scale(source\[i]), i, color);\n        \}\n      \}\n    \}\n  \}\n\};"
  rebuild ""
  PlotSlice_plot_input {{parent.antialias}}
  PlotSlice_color 0.6
  PlotSlice_max_val {{parent.max_value+fabs(parent.min_value)}}
  PlotSlice_min_val {{parent.min_value}}
  PlotSlice_draw_lines {{parent.draw_lines}}
  PlotSlice_tolerance 1.01
  PlotSlice_lines_color {{parent.lines_color.r} {parent.lines_color.g} {parent.lines_color.b}}
  rebuild_finalise ""
  name PlotSlice
  xpos -590
  ypos -328
 }
 Merge2 {
  inputs 2
  bbox B
  name Switch_Method
  xpos -590
  ypos -274
  disable {{parent.antialias}}
 }
 Matrix {
  channels rgba
  matrix {
      {1 2 1}
      {2 4 2}
      {1 2 1}
    }
  normalize true
  name Antialias
  xpos -590
  ypos -226
 }
 Keyer {
  operation "luminance key"
  name Keyer1
  xpos -590
  ypos -184
 }
set N233e5600 [stack 0]
push $N23227200
 ContactSheet {
  inputs 2
  width {{Input.width}}
  height {{Input.height*2}}
  rows 2
  columns 1
  roworder TopBottom
  name ContactSheet2
  label Bottom
  xpos -370
  ypos -184
 }
push $N233e5600
push $N23227200
 ContactSheet {
  inputs 2
  width {{Input.width*2}}
  height {{Input.height}}
  rows 1
  columns 2
  name ContactSheet1
  label Right
  xpos -480
  ypos -184
 }
push $N233e5600
push $N23227900
 Merge2 {
  inputs 2
  name Merge1
  xpos -810
  ypos -178
 }
push $N233e5600
 Switch {
  inputs 4
  which {{parent.style}}
  name switch_plot_type
  xpos -810
  ypos -106
 }
 Output {
  name Output
  xpos -810
  ypos -34
 }
end_group
Posterize {
 inputs 0
 channels rgba
 name Posterize1
 note_font Helvetica
 xpos -40
 ypos -801
}
Sampler {
 inputs 0
 name Sampler1
 note_font Helvetica
 xpos -40
 ypos -753
}
ColorCorrect {
 inputs 0
 name ColorCorrect1
 note_font Helvetica
 xpos -370
 ypos -1017
}
Constant {
 inputs 0
 format "1024 1024 0 0 1024 1024 1 square_1K"
 name Constant11
 note_font Helvetica
 xpos -370
 ypos 6543
 postage_stamp false
}
Ramp {
 p0 {0 0}
 p1 {{width} 0}
 color {{parent.PlotSlice10.max_value-parent.PlotSlice10.min_value}}
 name Ramp9
 note_font Helvetica
 xpos -370
 ypos 6567
}
Add {
 channels rgba
 value {{parent.PlotSlice10.min_value}}
 name Add11
 note_font Helvetica
 xpos -370
 ypos 6591
}
Dot {
 name Dot15
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos -336
 ypos 6666
}
set N2337dd00 [stack 0]
Dot {
 name Dot19
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos -446
 ypos 6666
}
set N2337d600 [stack 0]
Multiply {
 channels rgba
 value 5.555555556
 name Multiply4
 note_font Helvetica
 xpos -480
 ypos 6711
}
Gamma {
 channels rgba
 value 0.5
 name Gamma1
 note_font Helvetica
 xpos -480
 ypos 6745
 disable true
}
Multiply {
 channels rgba
 value 0.18
 name Multiply5
 note_font Helvetica
 xpos -480
 ypos 6783
}
push $N2337d600
Grade {
 whitepoint 0.18
 black_clamp false
 name Grade5
 note_font Helvetica
 xpos -585
 ypos 6711
}
Gamma {
 channels rgba
 value 0.5
 name Gamma4
 note_font Helvetica
 xpos -585
 ypos 6747
}
Grade {
 white 0.18
 black_clamp false
 name Grade6
 note_font Helvetica
 xpos -585
 ypos 6783
}
push $N2337dd00
ColorCorrect {
 shadows.offset 0.17
 highlights.gain 0.74
 lookup {shadow {curve 1 s0 x0.477881968 0 s0}
   midtone {1-shadow-highlight}
   highlight {}}
 name ColorCorrect2
 note_font Helvetica
 xpos -370
 ypos 6783
}
Dot {
 name Dot16
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos -336
 ypos 6834
}
Group {
 name PlotSlice10
 xpos -150
 ypos 6830
 addUserKnob {20 PlotSlice_tab l PlotSlice}
 addUserKnob {41 useGPUIfAvailable l "Use GPU if available" T PlotSlice.useGPUIfAvailable}
 addUserKnob {12 pos1 l p1}
 addUserKnob {12 pos2 l p2 -STARTLINE}
 pos2 {{width} 0}
 addUserKnob {7 max_value l "max value" R 1 10}
 max_value 1.1
 addUserKnob {7 min_value l "min value" R -1 0}
 min_value -0.1
 addUserKnob {4 style M {replace over right bottom ""}}
 addUserKnob {6 antialias t "enable antialiasing. prettier, at the cost of speed." -STARTLINE}
 antialias true
 addUserKnob {6 draw_lines l "draw lines" t "draw horizontal lines every whole number" -STARTLINE}
 draw_lines true
 addUserKnob {18 lines_color l "lines color"}
 lines_color 0.1
 addUserKnob {6 lines_color_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
}
 Input {
  inputs 0
  name Input
  xpos -810
  ypos -658
 }
 Dot {
  name Dot13
  note_font_size 42
  note_font_color 0x7f7f7f01
  xpos -776
  ypos -558
 }
set N23333200 [stack 0]
 Dot {
  name Dot12
  note_font_size 42
  note_font_color 0x7f7f7f01
  xpos -556
  ypos -558
 }
set N23332b00 [stack 0]
 Transform {
  translate {{-parent.pos1} {-parent.pos1}}
  black_outside false
  name Transform4
  label T
  xpos -590
  ypos -520
 }
 Transform {
  rotate {{"-degrees( atan2(parent.pos2.y-parent.pos1.y, parent.pos2.x-parent.pos1.x) )"}}
  black_outside false
  name Transform5
  label "R\n"
  xpos -590
  ypos -472
 }
 Transform {
  scale {{"width / sqrt(pow(parent.pos2.x-parent.pos1.x,2) + pow(parent.pos2.y-parent.pos1.y,2))"}}
  black_outside false
  name Transform6
  label S
  xpos -590
  ypos -424
 }
set N23331600 [stack 0]
 Crop {
  box {0 0 {Input.width} 1}
  reformat true
  crop false
  name Crop1
  xpos -700
  ypos -418
 }
 Expression {
  expr0 r/max_val-(min_val/max_val)
  expr1 g/max_val-(min_val/max_val)
  expr2 b/max_val-(min_val/max_val)
  expr3 a/max_val-(min_val/max_val)
  name Fit
  xpos -700
  ypos -394
  addUserKnob {20 Param}
  addUserKnob {7 max_val R 1 10}
  max_val {{parent.max_value+fabs(parent.min_value)}}
  addUserKnob {7 min_val R -1 0}
  min_val {{parent.min_value}}
 }
 Reformat {
  type "to box"
  box_width {{Input.width}}
  box_height {{Input.height}}
  box_fixed true
  resize distort
  filter impulse
  name Reformat1
  xpos -700
  ypos -370
 }
 Expression {
  temp_name0 c
  temp_expr0 0.8
  expr0 "fabs((y/height)-r)<=tolerance ? c : 0"
  expr1 "fabs((y/height)-g)<=tolerance ? c : 0"
  expr2 "fabs((y/height)-b)<=tolerance ? c : 0"
  expr3 "fabs((y/height)-a)<=tolerance ? c : 0"
  name PlotSlice_
  xpos -700
  ypos -344
  addUserKnob {20 User}
  addUserKnob {7 tolerance}
  tolerance 0.0007
 }
push $N23331600
 Reformat {
  type "to box"
  box_width {{"\[exists input] ? input.width : root.width"}}
  box_height {{"\[exists input] ? input.height : root.height"}}
  box_fixed true
  box_pixel_aspect {{"\[exists input] ? input.pixel_aspect : root.pixel_aspect"}}
  resize none
  black_outside true
  name BboxRemove
  xpos -590
  ypos -370
 }
 BlinkScript {
  recompileCount 3
  KernelDescription "2 \"PlotSlice\" iterate pixelWise a85c49a08f78aaad29c10667611d0922f3ade835175dd677155ef71c6ca45491 2 \"src\" Read Random \"dst\" Write Random 7 \"plot_input\" Bool 1 AA== \"color\" Float 1 AAAAAA== \"max_val\" Float 1 AAAAAA== \"min_val\" Float 1 AAAAAA== \"draw_lines\" Bool 1 AA== \"tolerance\" Float 1 AAAAAA== \"lines_color\" Float 3 AAAAAAAAAAAAAAAAAAAAAA== 7 \"plot_input\" 1 1 \"color\" 1 1 \"max_val\" 1 1 \"min_val\" 1 1 \"draw_lines\" 1 1 \"tolerance\" 1 1 \"lines_color\" 3 1 0"
  kernelSource "kernel PlotSlice : public ImageComputationKernel<ePixelWise>\n\{\n  Image<eRead, eAccessRandom, eEdgeClamped> src;\n  Image<eWrite, eAccessRandom> dst;\n\n  param:\n    bool plot_input;\n    float color;\n    float max_val;\n    float min_val;\n    bool draw_lines;\n    float tolerance;\n    float3 lines_color;\n\n  float gaussian(float d, float a, float expv) \{\n    return max(0.0f, exp(-a*d*d)-expv);\n  \}\n\n  float gaussian_filter(float x, float y, float r) \{\n    // return gaussian weighted distance from origin (0, 0)\n    // given coordinate (x, y) and radius r\n    float a = 1.5f; // rate falloff\n    float expv = exp(-a*r*r);\n    return gaussian(x, a, expv) * gaussian(y, a, expv);\n  \}\n\n  void write(float x, float y, int k, float c) \{\n    int n = 2;\n    int u0 = round(x);\n    int v0 = round(y);\n    // skip if center pixel weight is greater than tolerance\n    // if ( dst.bounds.inside(u0, v0)) \{\n    //   if (dst(u0, v0, 3) >= tolerance) return;\n    // \}\n    // loop over neighborhood\n    for (int j = -n; j <= n; j++) \{\n      int v = v0 + j;\n      for (int i = -n; i <= n; i++) \{\n        int u = u0 + i;\n        if ( dst.bounds.inside(u, v)) \{\n          // get filter weight for coord (u,v)\n          float w = gaussian_filter(u-x, v-y, float(n));\n          float c0 = dst(u, v, k); // existing color\n          float w0 = dst(u, v, 3); // existing alpha\n          // merge current color sample over existing color sample\n          dst(u, v, k) = c*w+c0*(1-w);\n          // merge current weight over existing weight\n          dst(u, v, 3) = w+w0*(1-w);\n        \}\n      \}\n    \}\n  \}\n\n  float scale(float x) \{\n    return (x*dst.bounds.height())/(max_val)-((min_val/max_val)*dst.bounds.height());\n  \}\n\n  void process(int2 pos) \{\n    if (pos.y == 0) \{\n      if (draw_lines) \{\n        for (int i = 0; i < max_val; i++) \{\n          for (int k = 0; k < 3; k++) \{\n            write(pos.x, scale(i), k, lines_color\[k]);\n          \}\n        \}\n      \}\n      if (plot_input) \{\n        float4 source = src(pos.x, pos.y);\n        for (int i = 0; i < 3; i++)\{\n          write(pos.x, scale(source\[i]), i, color);\n        \}\n      \}\n    \}\n  \}\n\};"
  rebuild ""
  PlotSlice_plot_input {{parent.antialias}}
  PlotSlice_color 0.6
  PlotSlice_max_val {{parent.max_value+fabs(parent.min_value)}}
  PlotSlice_min_val {{parent.min_value}}
  PlotSlice_draw_lines {{parent.draw_lines}}
  PlotSlice_tolerance 1.01
  PlotSlice_lines_color {{parent.lines_color.r} {parent.lines_color.g} {parent.lines_color.b}}
  rebuild_finalise ""
  name PlotSlice
  xpos -590
  ypos -328
 }
 Merge2 {
  inputs 2
  bbox B
  name Switch_Method
  xpos -590
  ypos -274
  disable {{parent.antialias}}
 }
 Matrix {
  channels rgba
  matrix {
      {1 2 1}
      {2 4 2}
      {1 2 1}
    }
  normalize true
  name Antialias
  xpos -590
  ypos -226
 }
 Keyer {
  operation "luminance key"
  name Keyer1
  xpos -590
  ypos -184
 }
set N2033cf00 [stack 0]
push $N23332b00
 ContactSheet {
  inputs 2
  width {{Input.width}}
  height {{Input.height*2}}
  rows 2
  columns 1
  roworder TopBottom
  name ContactSheet2
  label Bottom
  xpos -370
  ypos -184
 }
push $N2033cf00
push $N23332b00
 ContactSheet {
  inputs 2
  width {{Input.width*2}}
  height {{Input.height}}
  rows 1
  columns 2
  name ContactSheet1
  label Right
  xpos -480
  ypos -184
 }
push $N2033cf00
push $N23333200
 Merge2 {
  inputs 2
  name Merge1
  xpos -810
  ypos -178
 }
push $N2033cf00
 Switch {
  inputs 4
  which {{parent.style}}
  name switch_plot_type
  xpos -810
  ypos -106
 }
 Output {
  name Output
  xpos -810
  ypos -34
 }
end_group
RolloffContrast {
 inputs 0
 slope_mag_low1 0.8000000119
 black_low 1
 slope_mag_high2 0.8000000119
 white_high 1
 name RolloffContrast1
 note_font Helvetica
 xpos -40
 ypos -897
}
Histogram {
 inputs 0
 name Histogram1
 note_font Helvetica
 xpos -40
 ypos -849
}
Read {
 inputs 0
 container_codec 6
 file_type mxf
 file /cave/vault/test_footage/cinematography.net/source/Valvula-Films-Demo-2014/F65-RAW/A002C004_170114GS/A002C004_170114GS.mxf
 format "4096 2160 0 0 4096 2160 1 4K_DCP"
 origset true
 colorspace data
 auto_alpha true
 mxfInit true
 sonyGamut S-Gamut3
 sonyExposureIndex 800
 sonyKelvin 5500
 sonyTint 0
 name Read1
 tile_color 0x989898ff
 note_font Helvetica
 xpos -613
 ypos 8523
 postage_stamp false
}
Constant {
 inputs 0
 format "1024 1024 0 0 1024 1024 1 square_1K"
 name Constant13
 note_font Helvetica
 xpos -480
 ypos 8439
 postage_stamp false
}
Ramp {
 p0 {0 0}
 p1 {{width} 0}
 color {{parent.PlotSlice12.max_value-parent.PlotSlice12.min_value}}
 name Ramp11
 note_font Helvetica
 xpos -480
 ypos 8463
}
Add {
 channels rgba
 value {{parent.PlotSlice12.min_value}}
 name Add13
 note_font Helvetica
 xpos -480
 ypos 8487
}
Dot {
 name Dot20
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos -446
 ypos 8562
}
Group {
 name Log2Shaper2
 xpos -480
 ypos 8606
 disable true
 addUserKnob {20 log2_to_lin_tab l "log2 to lin"}
 addUserKnob {35 presets l preset t "Presets for the exposure domain. \n\n48nits shaper small domain matches the log2 shaper used in the ACES 1.0.3 config. \n\nThe new 48nits shaper was expanded to match the acescc curve to reduce artifacts." M {"curve/48nits shaper" "knobs this \{mid_grey 0.18 min_exp -6.5 max_exp 6.5 label \"48nits shaper\"\}" "curve/48nits shaper acescc" "knobs this \{mid_grey 0.18 min_exp -7.246068811667588 max_exp 10.273931188332412 label \"48nits shaper acescc\"\}" "curve/LMT shaper" "knobs this \{mid_grey 0.18 min_exp -10 max_exp 6.5 label \"LMT shaper\"\}" "curve/108nits shaper" "knobs this \{mid_grey 0.18 min_exp -12 max_exp 8 label \"108nits shaper\"\}" "curve/1000nits shaper" "knobs this \{mid_grey 0.18 min_exp -12 max_exp 10 label \"1000nits shaper\"\}" "curve/2000nits shaper" "knobs this \{mid_grey 0.18 min_exp -12 max_exp 11 label \"2000nits shaper\"\}" "curve/4000nits shaper" "knobs this \{mid_grey 0.18 min_exp -12 max_exp 12 label \"4000nits shaper\"\}"}}
 addUserKnob {26 ""}
 addUserKnob {4 direction M {forward inverse}}
 direction inverse
 addUserKnob {4 negatives t "how to handle negative values.\n\nclamp does not modify the log curve near black. negative values will clip to 0.0\n\nlinear extension will multiply negatives with a linear extension below cut.\n\nreflect will compress or expand negative values with the mirror of the positive log function." -STARTLINE M {clamp "linear extension" reflect "" ""}}
 addUserKnob {26 graph_link l "" -STARTLINE T " <style> a:link \{ color: #ccc \}</style><a href=https://www.desmos.com/calculator/on4cq2xj9g>graph</a>"}
 addUserKnob {7 mid_grey l "mid grey" R 0.1 0.2}
 mid_grey 0.18
 addUserKnob {7 min_exp l "min exp" R -12 0}
 min_exp -6.5
 addUserKnob {7 max_exp l "max exp" R 0 12}
 max_exp 6.5
 addUserKnob {7 cut t "Transition from log curve to linear extension at cut value." R 0 0.1}
 cut 0.008
}
 Input {
  inputs 0
  name Input
  xpos -40
  ypos -82
 }
 Dot {
  name Dot
  xpos -6
  ypos -6
 }
set N202d4800 [stack 0]
 Dot {
  name Dot2
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xff
  xpos 104
  ypos 42
 }
set N202d4100 [stack 0]
 Expression {
  expr0 r>=c?(log(r/mid_grey)/log(2)-min_exp)/(max_exp-min_exp):(r>-c&&r<c)?s*(r-c)+o:-(log(-r/mid_grey)/log(2)-min_exp)/(max_exp-min_exp)+2*r0
  expr1 g>=c?(log(g/mid_grey)/log(2)-min_exp)/(max_exp-min_exp):(g>-c&&g<c)?s*(g-c)+o:-(log(-g/mid_grey)/log(2)-min_exp)/(max_exp-min_exp)+2*r0
  expr2 b>=c?(log(b/mid_grey)/log(2)-min_exp)/(max_exp-min_exp):(b>-c&&b<c)?s*(b-c)+o:-(log(-b/mid_grey)/log(2)-min_exp)/(max_exp-min_exp)+2*r0
  channel3 none
  name lin_to_log_reflect
  xpos 290
  ypos 86
  addUserKnob {20 User}
  addUserKnob {7 c l cut R 0 0.2}
  c {{max(1e-8,cut)}}
  addUserKnob {7 o l offset}
  o {{(log(c/mid_grey)/log(2)-min_exp)/(max_exp-min_exp)}}
  addUserKnob {7 s l slope}
  s {{1/(log(2)*c*(max_exp-min_exp))}}
  addUserKnob {7 r0 l root t "zero crossing for linear segment"}
  r0 {{-c*s+o}}
 }
push $N202d4100
 Expression {
  temp_name0 c
  temp_expr0 max(1e-8,cut)
  temp_name1 offset
  temp_expr1 (log(c/mid_grey)/log(2)-min_exp)/(max_exp-min_exp)
  temp_name2 s
  temp_expr2 1/(log(2)*c*(max_exp-min_exp))
  expr0 r>=c?(log(r/mid_grey)/log(2)-min_exp)/(max_exp-min_exp):s*(r-c)+offset
  expr1 g>=c?(log(g/mid_grey)/log(2)-min_exp)/(max_exp-min_exp):s*(g-c)+offset
  expr2 b>=c?(log(b/mid_grey)/log(2)-min_exp)/(max_exp-min_exp):s*(b-c)+offset
  channel3 none
  name lin_to_log_extension
  xpos 180
  ypos 86
 }
push $N202d4100
 Expression {
  expr0 "r > 1e-12 ? (log( r / mid_grey)/log(2) - min_exp) / (max_exp - min_exp) : 0"
  expr1 "g > 0 ? (log( g / mid_grey)/log(2) - min_exp) / (max_exp - min_exp) : 0"
  expr2 "b > 0 ? (log( b / mid_grey)/log(2) - min_exp) / (max_exp - min_exp) : 0"
  name lin_to_log_clamp
  xpos 70
  ypos 86
 }
 Switch {
  inputs 3
  which {{parent.negatives}}
  name switch_negatives1
  note_font Helvetica
  xpos 70
  ypos 159
 }
push $N202d4800
 Dot {
  name Dot1
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xff
  xpos -116
  ypos 42
 }
set N202a9d00 [stack 0]
 Expression {
  expr0 r>=o?pow(2,(r*(max_exp-min_exp)+min_exp))*mid_grey:(r<o&&r>=-o+2*r0)?(r-o)/s+c:-(pow(2,(-r+2*r0)*(max_exp-min_exp)+min_exp))*mid_grey
  expr1 g>=o?pow(2,(g*(max_exp-min_exp)+min_exp))*mid_grey:(g<o&&g>=-o+2*r0)?(g-o)/s+c:-(pow(2,(-g+2*r0)*(max_exp-min_exp)+min_exp))*mid_grey
  expr2 b>=o?pow(2,(b*(max_exp-min_exp)+min_exp))*mid_grey:(b<o&&b>=-o+2*r0)?(b-o)/s+c:-(pow(2,(-b+2*r0)*(max_exp-min_exp)+min_exp))*mid_grey
  channel3 none
  name log_to_lin_reflect
  xpos -150
  ypos 86
  addUserKnob {20 User}
  addUserKnob {7 c l cut R 0 0.2}
  c {{max(1e-8,cut)}}
  addUserKnob {7 o l offset}
  o {{(log(c/mid_grey)/log(2)-min_exp)/(max_exp-min_exp)}}
  addUserKnob {7 s l slope}
  s {{1/(log(2)*c*(max_exp-min_exp))}}
  addUserKnob {7 r0 l root t "zero crossing for linear segment"}
  r0 {{-c*s+o}}
  addUserKnob {7 add}
 }
push $N202a9d00
 Expression {
  temp_name0 c
  temp_expr0 max(1e-8,cut)
  temp_name1 offset
  temp_expr1 (log(c/mid_grey)/log(2)-min_exp)/(max_exp-min_exp)
  temp_name2 s
  temp_expr2 1/(log(2)*c*(max_exp-min_exp))
  expr0 r>=offset?pow(2,(r*(max_exp-min_exp)+min_exp))*mid_grey:(r-offset)/s+c
  expr1 g>=offset?pow(2,(g*(max_exp-min_exp)+min_exp))*mid_grey:(g-offset)/s+c
  expr2 b>=offset?pow(2,(b*(max_exp-min_exp)+min_exp))*mid_grey:(b-offset)/s+c
  channel3 none
  name log_to_lin_extension
  xpos -260
  ypos 86
 }
push $N202a9d00
 Expression {
  expr0 "pow(2, ( r * (max_exp - min_exp) + min_exp)) * mid_grey"
  expr1 "pow(2, ( g * (max_exp - min_exp) + min_exp)) * mid_grey"
  expr2 "pow(2, ( b * (max_exp - min_exp) + min_exp)) * mid_grey"
  name log_to_lin_clamp
  xpos -370
  ypos 86
 }
 Switch {
  inputs 3
  which {{parent.negatives}}
  name switch_negatives
  note_font Helvetica
  xpos -150
  ypos 159
 }
 Switch {
  inputs 2
  which {{parent.direction}}
  name switch_direction
  xpos -40
  ypos 206
 }
 Output {
  name Output
  xpos -40
  ypos 278
 }
end_group
set N202d5600 [stack 0]
Group {
 name PlotWaveform
 xpos -613
 ypos 8635
 addUserKnob {20 Waveform_tab l Waveform}
 addUserKnob {41 useGPUIfAvailable l "Use GPU if available" T WaveForm.useGPUIfAvailable}
 addUserKnob {41 vectorize l "Vectorize on CPU" -STARTLINE T WaveForm.vectorize}
 addUserKnob {26 ""}
 addUserKnob {4 style M {fill add right bottom pip "" ""}}
 addUserKnob {6 guides t "draw guides at integer values (0, 1, 2 etc), and 0.18" -STARTLINE}
 guides true
 addUserKnob {6 split_rgb l "split rgb" t "separate rgb" -STARTLINE}
 addUserKnob {41 specifiedFormat l format t "specify the output format. Otherwise the input format will be used." -STARTLINE T WaveForm.specifiedFormat}
 addUserKnob {41 format l "" -STARTLINE T WaveForm.format}
 addUserKnob {6 log_transform l "log transform" t "display waveform in log (generic log2 shaper)" +STARTLINE}
 addUserKnob {6 antialias t "enable antialiasing" -STARTLINE}
 addUserKnob {7 max_value l "max value" t "The value to map to the top of frame. For example you may want to set this to the max pixel value in the image." R 1 25}
 max_value 1
 addUserKnob {7 min_value l "min value" R -1 0}
 min_value -0.03
 addUserKnob {7 brightness t "multiply the brightness of the waveform"}
 brightness 0.2
 addUserKnob {22 set_max l "set max" t "Set's the max slider to the max pixel value on the current frame of the input image." T "n = nuke.thisNode()\nnuke.root().begin()\nn.begin()\nct = nuke.toNode('CT')\nnuke.execute(ct, nuke.frame(), nuke.frame())\nmaxpx = ct\['maxlumapixvalue'].getValue()\nave = (maxpx\[0] + maxpx\[1] + maxpx\[2])/3\nn\['max_value'].setValue(ave)" +STARTLINE}
 addUserKnob {41 box_size l pip_size t "set the picture in picture size" T Reformat3.box_size}
}
 Input {
  inputs 0
  name Input
  xpos 70
  ypos -226
 }
 AddChannels {
  name AddChannels1
  xpos 70
  ypos -184
 }
 Dot {
  name Dot1
  label " "
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos 104
  ypos -102
 }
set N2026cf00 [stack 0]
 Reformat {
  format {{{parent.WaveForm.format}}}
  resize distort
  filter impulse
  name ReScale
  xpos 70
  ypos -58
  disable {{!parent.specifiedFormat}}
 }
set N2026c800 [stack 0]
 CurveTool {
  operation "Max Luma Pixel"
  ROI {0 0 {input.width} {input.height}}
  autocropdata {0 0 {input.width} {input.height}}
  maxlumapixdata {{curve x1 1047 x14 1800} {curve x1 2212 x14 436}}
  maxlumapixvalue {{curve x1 5.210135937 x14 3.869687557} {curve x1 10.19536495 x14 4.130000114} {curve x1 9.513872147 x14 3.160937548}}
  minlumapixdata {{curve x1 0 x14 380} {curve x1 26 x14 0}}
  minlumapixvalue {{curve x1 0.01240783278 x14 0} {curve x1 0.00967685692 x14 0} {curve x1 0.02308944985 x14 0}}
  name CT
  xpos -40
  ypos -58
 }
push $N2026c800
 BlinkScript {
  recompileCount 39
  KernelDescription "2 \"PlotWaveform\" iterate pixelWise 88b7f52352ee7ffcbd8d6465ec4ac2ee10c040557f69f3c5cce1cf1b8c43cde4 2 \"src\" Read Random \"dst\" Write Random 10 \"max_value\" Float 1 AAAAAA== \"min_value\" Float 1 AAAAAA== \"tolerance\" Float 1 AAAAAA== \"mult\" Float 1 AAAAAA== \"log_min\" Float 1 AAAAAA== \"log_max\" Float 1 AAAAAA== \"enable_log_transform\" Bool 1 AA== \"antialias\" Bool 1 AA== \"draw_lines\" Bool 1 AA== \"lines_color\" Float 4 AAAAAAAAAAAAAAAAAAAAAA== 10 \"max_value\" 1 1 \"min_value\" 1 1 \"tolerance\" 1 1 \"mult\" 1 1 \"log_min\" 1 1 \"log_max\" 1 1 \"enable_log_transform\" 1 1 \"antialias\" 1 1 \"draw_lines\" 1 1 \"lines_color\" 4 1 1 \"yscale\" Float 1 1 AAAAAA=="
  kernelSource "kernel PlotWaveform : public ImageComputationKernel<ePixelWise>\n\{\n  Image<eRead, eAccessRandom, eEdgeClamped> src;\n  Image<eWrite, eAccessRandom> dst;\n\n  param:\n    float max_value;\n    float min_value;\n    float tolerance;\n    float mult;\n    float log_min;\n    float log_max;\n    bool enable_log_transform;\n    bool antialias;\n    bool draw_lines;\n    float4 lines_color;\n\n  local:\n    float yscale;\n\n  void init() \{\n    yscale = dst.bounds.height() / max_value;\n  \}\n\n  float gaussian(float d, float a, float expv) \{\n    return max(0.0f, exp(-a*d*d)-expv);\n  \}\n\n  float gaussian_filter(float x, float y, float r) \{\n    // return gaussian weighted distance from origin (0, 0)\n    // given coordinate (x, y) and radius r\n    float a = 1.5f; // rate falloff\n    float expv = exp(-a*r*r);\n    return gaussian(x, a, expv) * gaussian(y, a, expv);\n  \}\n\n  void write(float x, float y, int k, float c) \{\n    // Write cubic antialiased pixel value c in channel k at continuous float position x, y\n    int n = 2;\n    int u0 = round(x);\n    int v0 = round(y);\n    // skip if center pixel weight is greater than tolerance\n    if ( dst.bounds.inside(u0, v0)) \{\n      if (dst(u0, v0, 3) >= tolerance) return;\n    \}\n    // loop over neighborhood\n    for (int j = -n; j <= n; j++) \{\n      int v = v0 + j;\n      for (int i = -n; i <= n; i++) \{\n        int u = u0 + i;\n        if ( dst.bounds.inside(u, v)) \{\n          // get filter weight for coord (u,v)\n          float w = gaussian_filter(u-x, v-y, float(n));\n          float c0 = dst(u, v, k); // existing color\n          // merge current color sample over existing color sample\n          dst(u, v, k) = c*w*mult+c0;\n          // merge current weight over existing weight\n          float w0 = dst(u, v, 3);\n          dst(u, v, 3) = w+w0*(1-w);\n        \}\n      \}\n    \}\n  \}\n\n  float log_transform(float x) \{\n    return x > 0.0f ? (log( x / 0.18f)/log(2.0f) - log_min) / (log_max - log_min) : x;\n  \}\n\n  void process(int2 pos) \{\n    float4 source = src(pos.x, pos.y);\n    if (enable_log_transform) \{\n      for (int k = 0; k < 3; k++)\{\n        source\[k] = log_transform(source\[k]);\n      \}\n    \}\n    float4 source_scaled = (source - min_value) * yscale;\n    if (antialias) \{\n      for (int k = 0; k < 3; k++)\{\n        write(pos.x, source_scaled\[k], k, source\[k]);\n      \}\n    \} else \{\n      for (int k = 0; k < 3; k++)\{\n        if ( dst.bounds.inside(pos.x, source_scaled\[k])) \{\n          dst(pos.x, source_scaled\[k], k) = source\[k]*mult + dst(pos.x, source_scaled\[k], k);\n          dst(pos.x, source_scaled\[k], 3) = 1.0f;\n        \}\n      \}\n    \}\n    if (draw_lines) \{\n      if (pos.x > 0 && pos.y > 0) return; // only draw the lines once\n      for (int i = 0; i < 50; i++) \{\n        float val = i;\n        if (enable_log_transform) val = log_transform(i);\n        for (int k = 0; k < 3; k++) \{\n          write(pos.x, (val - min_value)*yscale, k, lines_color\[k]);\n        \}\n      \}\n    \}\n  \}\n\};"
  rebuild ""
  PlotWaveform_max_value {{"parent.log_transform ? 1.01 : (parent.max_value+parent.min_value)"}}
  PlotWaveform_min_value {{parent.min_value}}
  PlotWaveform_tolerance 2
  PlotWaveform_mult {{parent.brightness}}
  PlotWaveform_log_min -6.5
  PlotWaveform_log_max 6.5
  PlotWaveform_enable_log_transform {{parent.log_transform}}
  PlotWaveform_antialias {{parent.antialias}}
  PlotWaveform_draw_lines {{parent.guides}}
  PlotWaveform_lines_color {0.6 0 0.02 1}
  format "2048 2048 0 0 2048 2048 1 square_2K"
  rebuild_finalise ""
  name WaveForm
  xpos 70
  ypos 32
 }
 Group {
  name RGB_Split
  xpos 70
  ypos 110
  disable {{!parent.split_rgb}}
 }
  Input {
   inputs 0
   name Input
   xpos 45
   ypos -59
  }
  Reformat {
   type "to box"
   box_width {{rint(input.width/3)}}
   box_height {{input.height}}
   scale {1 1}
   resize none
   name Reformat4
   xpos 45
   ypos 1
  }
  Dot {
   name Dot18
   label " "
   note_font_size 24
   note_font_color 0xa5a5a501
   xpos 79
   ypos 53
  }
set N17fcb200 [stack 0]
  Dot {
   name Dot19
   label " "
   note_font_size 24
   note_font_color 0xa5a5a501
   xpos 189
   ypos 53
  }
  Expression {
   expr0 0
   expr1 0
   expr2 b
   expr3 a
   name Expression3
   xpos 155
   ypos 97
  }
push $N17fcb200
  Expression {
   expr0 0
   expr1 g
   expr2 0
   expr3 a
   name Expression2
   xpos 45
   ypos 97
  }
push $N17fcb200
  Dot {
   name Dot17
   label " "
   note_font_size 24
   note_font_color 0xa5a5a501
   xpos -31
   ypos 53
  }
  Expression {
   expr0 r
   expr1 0
   expr2 0
   expr3 a
   name Expression1
   xpos -65
   ypos 97
  }
  ContactSheet {
   inputs 3
   width {{parent.input.width}}
   height {{parent.input.height}}
   rows 1
   columns 3
   roworder TopBottom
   name ContactSheet1
   xpos 45
   ypos 152
  }
  Output {
   name Output
   xpos 45
   ypos 241
  }
 end_group
 Keyer {
  operation "luminance key"
  name Keyer1
  xpos 70
  ypos 176
 }
 Dot {
  name Dot5
  label " "
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos 104
  ypos 234
 }
set N17f9b200 [stack 0]
 Dot {
  name Dot3
  label " Fill"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos 104
  ypos 378
 }
 Dot {
  name Dot13
  label " "
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos 104
  ypos 444
 }
set N17f9a400 [stack 0]
 Shuffle {
  alpha white
  name Shuffle1
  label "\[value in] -> \[value out]"
  xpos 747
  ypos 420
 }
 Reformat {
  type "to box"
  box_width {{"min(input.width, parent.Input.width*box_size)"}}
  scale 0.5
  filter notch
  black_outside true
  pbb true
  name Reformat3
  xpos 747
  ypos 465
  addUserKnob {20 User}
  addUserKnob {7 box_size R 0.05 0.6}
  box_size 0.3
 }
push $N2026cf00
 Dot {
  name Dot8
  label " "
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos 324
  ypos -102
 }
set N17f98f00 [stack 0]
 Dot {
  name Dot2
  label " "
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos 544
  ypos -102
 }
 BlackOutside {
  name BlackOutside2
  xpos 510
  ypos 14
 }
set N17f98100 [stack 0]
 Dot {
  name Dot7
  label " "
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos 764
  ypos 18
 }
set N17f73900 [stack 0]
 Dot {
  name Dot14
  label " "
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos 874
  ypos 18
 }
 Merge2 {
  inputs 2
  bbox B
  name Merge4
  xpos 840
  ypos 518
 }
 Dot {
  name Dot11
  label PIP
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos 874
  ypos 570
 }
push $N17f9b200
 Dot {
  name Dot9
  label " "
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos 214
  ypos 234
 }
set N17f71d00 [stack 0]
 Reformat {
  type "to box"
  box_width {{parent.Input.width}}
  box_height {{parent.Input.height}}
  box_fixed true
  resize none
  center false
  black_outside true
  name Reformat1
  xpos 400
  ypos 230
 }
 BlackOutside {
  name BlackOutside1
  xpos 400
  ypos 254
 }
set N17f70f00 [stack 0]
 Position {
  translate {0 {-parent.input.height}}
  name MoveDown
  xpos 620
  ypos 254
  disable true
 }
push $N17f73900
 Crop {
  box {0 {-parent.input.height} {input.width} {input.height}}
  reformat true
  crop false
  name Crop2
  xpos 730
  ypos 182
 }
 Merge2 {
  inputs 2
  name Merge2
  xpos 730
  ypos 326
 }
 Dot {
  name Dot6
  label " Bottom"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos 764
  ypos 378
 }
push $N17f70f00
 Position {
  translate {{parent.input.width} 0}
  name MoveRight
  xpos 400
  ypos 278
 }
push $N17f98100
 Crop {
  box {0 0 {parent.MoveRight.bbox.r} {input.height}}
  reformat true
  crop false
  name Crop1
  xpos 510
  ypos 278
 }
 Merge2 {
  inputs 2
  name Merge1
  xpos 510
  ypos 326
 }
 Dot {
  name Dot4
  label " Right"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos 544
  ypos 378
 }
push $N17f71d00
 Reformat {
  type "to box"
  box_width {{parent.input.width}}
  box_height {{parent.input.height}}
  box_fixed true
  resize distort
  center false
  black_outside true
  name Reformat2
  xpos 180
  ypos 279
 }
push $N17f98f00
 Dot {
  name Dot12
  label " "
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos 324
  ypos 190
 }
 Merge2 {
  inputs 2
  bbox B
  name Merge3
  xpos 290
  ypos 279
 }
 Dot {
  name Dot10
  label " Add"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos 324
  ypos 378
 }
push $N17f9a400
 Switch {
  inputs 5
  which {{parent.style}}
  name SwitchStyle
  xpos 70
  ypos 566
 }
 Output {
  name Output
  xpos 70
  ypos 710
 }
end_group
push $N202d5600
RolloffContrast {
 contrast 1.8
 center 0.53
 soft_clip 1
 value_override true
 slope_mag_low1 0.77
 slope_mag_high2 0.53
 name RolloffContrast2
 note_font Helvetica
 xpos -480
 ypos 8655
}
Dot {
 name Dot21
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos -446
 ypos 8730
}
Group {
 name PlotSlice12
 xpos -260
 ypos 8726
 addUserKnob {20 PlotSlice_tab l PlotSlice}
 addUserKnob {41 useGPUIfAvailable l "Use GPU if available" T PlotSlice.useGPUIfAvailable}
 addUserKnob {12 pos1 l p1}
 addUserKnob {12 pos2 l p2 -STARTLINE}
 pos2 {{width} 0}
 addUserKnob {7 max_value l "max value" R 1 10}
 max_value 1.1
 addUserKnob {7 min_value l "min value" R -1 0}
 min_value -0.1
 addUserKnob {4 style M {replace over right bottom ""}}
 addUserKnob {6 antialias t "enable antialiasing. prettier, at the cost of speed." -STARTLINE}
 antialias true
 addUserKnob {6 draw_lines l "draw lines" t "draw horizontal lines every whole number" -STARTLINE}
 draw_lines true
 addUserKnob {18 lines_color l "lines color"}
 lines_color 0.1
 addUserKnob {6 lines_color_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
}
 Input {
  inputs 0
  name Input
  xpos -810
  ypos -658
 }
 Dot {
  name Dot13
  note_font_size 42
  note_font_color 0x7f7f7f01
  xpos -776
  ypos -558
 }
set N17f0c100 [stack 0]
 Dot {
  name Dot12
  note_font_size 42
  note_font_color 0x7f7f7f01
  xpos -556
  ypos -558
 }
set N2014b900 [stack 0]
 Transform {
  translate {{-parent.pos1} {-parent.pos1}}
  black_outside false
  name Transform4
  label T
  xpos -590
  ypos -520
 }
 Transform {
  rotate {{"-degrees( atan2(parent.pos2.y-parent.pos1.y, parent.pos2.x-parent.pos1.x) )"}}
  black_outside false
  name Transform5
  label "R\n"
  xpos -590
  ypos -472
 }
 Transform {
  scale {{"width / sqrt(pow(parent.pos2.x-parent.pos1.x,2) + pow(parent.pos2.y-parent.pos1.y,2))"}}
  black_outside false
  name Transform6
  label S
  xpos -590
  ypos -424
 }
set N2014a400 [stack 0]
 Crop {
  box {0 0 {Input.width} 1}
  reformat true
  crop false
  name Crop1
  xpos -700
  ypos -418
 }
 Expression {
  expr0 r/max_val-(min_val/max_val)
  expr1 g/max_val-(min_val/max_val)
  expr2 b/max_val-(min_val/max_val)
  expr3 a/max_val-(min_val/max_val)
  name Fit
  xpos -700
  ypos -394
  addUserKnob {20 Param}
  addUserKnob {7 max_val R 1 10}
  max_val {{parent.max_value+fabs(parent.min_value)}}
  addUserKnob {7 min_val R -1 0}
  min_val {{parent.min_value}}
 }
 Reformat {
  type "to box"
  box_width {{Input.width}}
  box_height {{Input.height}}
  box_fixed true
  resize distort
  filter impulse
  name Reformat1
  xpos -700
  ypos -370
 }
 Expression {
  temp_name0 c
  temp_expr0 0.8
  expr0 "fabs((y/height)-r)<=tolerance ? c : 0"
  expr1 "fabs((y/height)-g)<=tolerance ? c : 0"
  expr2 "fabs((y/height)-b)<=tolerance ? c : 0"
  expr3 "fabs((y/height)-a)<=tolerance ? c : 0"
  name PlotSlice_
  xpos -700
  ypos -344
  addUserKnob {20 User}
  addUserKnob {7 tolerance}
  tolerance 0.0007
 }
push $N2014a400
 Reformat {
  type "to box"
  box_width {{"\[exists input] ? input.width : root.width"}}
  box_height {{"\[exists input] ? input.height : root.height"}}
  box_fixed true
  box_pixel_aspect {{"\[exists input] ? input.pixel_aspect : root.pixel_aspect"}}
  resize none
  black_outside true
  name BboxRemove
  xpos -590
  ypos -370
 }
 BlinkScript {
  recompileCount 3
  KernelDescription "2 \"PlotSlice\" iterate pixelWise a85c49a08f78aaad29c10667611d0922f3ade835175dd677155ef71c6ca45491 2 \"src\" Read Random \"dst\" Write Random 7 \"plot_input\" Bool 1 AA== \"color\" Float 1 AAAAAA== \"max_val\" Float 1 AAAAAA== \"min_val\" Float 1 AAAAAA== \"draw_lines\" Bool 1 AA== \"tolerance\" Float 1 AAAAAA== \"lines_color\" Float 3 AAAAAAAAAAAAAAAAAAAAAA== 7 \"plot_input\" 1 1 \"color\" 1 1 \"max_val\" 1 1 \"min_val\" 1 1 \"draw_lines\" 1 1 \"tolerance\" 1 1 \"lines_color\" 3 1 0"
  kernelSource "kernel PlotSlice : public ImageComputationKernel<ePixelWise>\n\{\n  Image<eRead, eAccessRandom, eEdgeClamped> src;\n  Image<eWrite, eAccessRandom> dst;\n\n  param:\n    bool plot_input;\n    float color;\n    float max_val;\n    float min_val;\n    bool draw_lines;\n    float tolerance;\n    float3 lines_color;\n\n  float gaussian(float d, float a, float expv) \{\n    return max(0.0f, exp(-a*d*d)-expv);\n  \}\n\n  float gaussian_filter(float x, float y, float r) \{\n    // return gaussian weighted distance from origin (0, 0)\n    // given coordinate (x, y) and radius r\n    float a = 1.5f; // rate falloff\n    float expv = exp(-a*r*r);\n    return gaussian(x, a, expv) * gaussian(y, a, expv);\n  \}\n\n  void write(float x, float y, int k, float c) \{\n    int n = 2;\n    int u0 = round(x);\n    int v0 = round(y);\n    // skip if center pixel weight is greater than tolerance\n    // if ( dst.bounds.inside(u0, v0)) \{\n    //   if (dst(u0, v0, 3) >= tolerance) return;\n    // \}\n    // loop over neighborhood\n    for (int j = -n; j <= n; j++) \{\n      int v = v0 + j;\n      for (int i = -n; i <= n; i++) \{\n        int u = u0 + i;\n        if ( dst.bounds.inside(u, v)) \{\n          // get filter weight for coord (u,v)\n          float w = gaussian_filter(u-x, v-y, float(n));\n          float c0 = dst(u, v, k); // existing color\n          float w0 = dst(u, v, 3); // existing alpha\n          // merge current color sample over existing color sample\n          dst(u, v, k) = c*w+c0*(1-w);\n          // merge current weight over existing weight\n          dst(u, v, 3) = w+w0*(1-w);\n        \}\n      \}\n    \}\n  \}\n\n  float scale(float x) \{\n    return (x*dst.bounds.height())/(max_val)-((min_val/max_val)*dst.bounds.height());\n  \}\n\n  void process(int2 pos) \{\n    if (pos.y == 0) \{\n      if (draw_lines) \{\n        for (int i = 0; i < max_val; i++) \{\n          for (int k = 0; k < 3; k++) \{\n            write(pos.x, scale(i), k, lines_color\[k]);\n          \}\n        \}\n      \}\n      if (plot_input) \{\n        float4 source = src(pos.x, pos.y);\n        for (int i = 0; i < 3; i++)\{\n          write(pos.x, scale(source\[i]), i, color);\n        \}\n      \}\n    \}\n  \}\n\};"
  rebuild ""
  PlotSlice_plot_input {{parent.antialias}}
  PlotSlice_color 0.6
  PlotSlice_max_val {{parent.max_value+fabs(parent.min_value)}}
  PlotSlice_min_val {{parent.min_value}}
  PlotSlice_draw_lines {{parent.draw_lines}}
  PlotSlice_tolerance 1.01
  PlotSlice_lines_color {{parent.lines_color.r} {parent.lines_color.g} {parent.lines_color.b}}
  rebuild_finalise ""
  name PlotSlice
  xpos -590
  ypos -328
 }
 Merge2 {
  inputs 2
  bbox B
  name Switch_Method
  xpos -590
  ypos -274
  disable {{parent.antialias}}
 }
 Matrix {
  channels rgba
  matrix {
      {1 2 1}
      {2 4 2}
      {1 2 1}
    }
  normalize true
  name Antialias
  xpos -590
  ypos -226
 }
 Keyer {
  operation "luminance key"
  name Keyer1
  xpos -590
  ypos -184
 }
set N20109d00 [stack 0]
push $N2014b900
 ContactSheet {
  inputs 2
  width {{Input.width}}
  height {{Input.height*2}}
  rows 2
  columns 1
  roworder TopBottom
  name ContactSheet2
  label Bottom
  xpos -370
  ypos -184
 }
push $N20109d00
push $N2014b900
 ContactSheet {
  inputs 2
  width {{Input.width*2}}
  height {{Input.height}}
  rows 1
  columns 2
  name ContactSheet1
  label Right
  xpos -480
  ypos -184
 }
push $N20109d00
push $N17f0c100
 Merge2 {
  inputs 2
  name Merge1
  xpos -810
  ypos -178
 }
push $N20109d00
 Switch {
  inputs 4
  which {{parent.style}}
  name switch_plot_type
  xpos -810
  ypos -106
 }
 Output {
  name Output
  xpos -810
  ypos -34
 }
end_group
Constant {
 inputs 0
 format "1024 1024 0 0 1024 1024 1 square_1K"
 name Constant14
 note_font Helvetica
 xpos -463
 ypos 9488
 postage_stamp false
}
Ramp {
 p0 {0 0}
 p1 {{width} 0}
 color {{parent.PlotSlice13.max_value-parent.PlotSlice13.min_value}}
 name Ramp12
 note_font Helvetica
 xpos -463
 ypos 9512
}
Add {
 channels rgba
 value {{parent.PlotSlice13.min_value}}
 name Add14
 note_font Helvetica
 xpos -463
 ypos 9536
}
Dot {
 name Dot22
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos -429
 ypos 9611
}
Histogram {
 name Histogram2
 note_font Helvetica
 xpos -463
 ypos 9663
}
Dot {
 name Dot23
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos -429
 ypos 9779
}
Group {
 name PlotSlice13
 xpos -243
 ypos 9775
 addUserKnob {20 PlotSlice_tab l PlotSlice}
 addUserKnob {41 useGPUIfAvailable l "Use GPU if available" T PlotSlice.useGPUIfAvailable}
 addUserKnob {12 pos1 l p1}
 addUserKnob {12 pos2 l p2 -STARTLINE}
 pos2 {{width} 0}
 addUserKnob {7 max_value l "max value" R 1 10}
 max_value 1.1
 addUserKnob {7 min_value l "min value" R -1 0}
 min_value -0.1
 addUserKnob {4 style M {replace over right bottom ""}}
 addUserKnob {6 antialias t "enable antialiasing. prettier, at the cost of speed." -STARTLINE}
 antialias true
 addUserKnob {6 draw_lines l "draw lines" t "draw horizontal lines every whole number" -STARTLINE}
 draw_lines true
 addUserKnob {18 lines_color l "lines color"}
 lines_color 0.1
 addUserKnob {6 lines_color_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
}
 Input {
  inputs 0
  name Input
  xpos -810
  ypos -658
 }
 Dot {
  name Dot13
  note_font_size 42
  note_font_color 0x7f7f7f01
  xpos -776
  ypos -558
 }
set N200bdd00 [stack 0]
 Dot {
  name Dot12
  note_font_size 42
  note_font_color 0x7f7f7f01
  xpos -556
  ypos -558
 }
set N200bd600 [stack 0]
 Transform {
  translate {{-parent.pos1} {-parent.pos1}}
  black_outside false
  name Transform4
  label T
  xpos -590
  ypos -520
 }
 Transform {
  rotate {{"-degrees( atan2(parent.pos2.y-parent.pos1.y, parent.pos2.x-parent.pos1.x) )"}}
  black_outside false
  name Transform5
  label "R\n"
  xpos -590
  ypos -472
 }
 Transform {
  scale {{"width / sqrt(pow(parent.pos2.x-parent.pos1.x,2) + pow(parent.pos2.y-parent.pos1.y,2))"}}
  black_outside false
  name Transform6
  label S
  xpos -590
  ypos -424
 }
set N200bc100 [stack 0]
 Crop {
  box {0 0 {Input.width} 1}
  reformat true
  crop false
  name Crop1
  xpos -700
  ypos -418
 }
 Expression {
  expr0 r/max_val-(min_val/max_val)
  expr1 g/max_val-(min_val/max_val)
  expr2 b/max_val-(min_val/max_val)
  expr3 a/max_val-(min_val/max_val)
  name Fit
  xpos -700
  ypos -394
  addUserKnob {20 Param}
  addUserKnob {7 max_val R 1 10}
  max_val {{parent.max_value+fabs(parent.min_value)}}
  addUserKnob {7 min_val R -1 0}
  min_val {{parent.min_value}}
 }
 Reformat {
  type "to box"
  box_width {{Input.width}}
  box_height {{Input.height}}
  box_fixed true
  resize distort
  filter impulse
  name Reformat1
  xpos -700
  ypos -370
 }
 Expression {
  temp_name0 c
  temp_expr0 0.8
  expr0 "fabs((y/height)-r)<=tolerance ? c : 0"
  expr1 "fabs((y/height)-g)<=tolerance ? c : 0"
  expr2 "fabs((y/height)-b)<=tolerance ? c : 0"
  expr3 "fabs((y/height)-a)<=tolerance ? c : 0"
  name PlotSlice_
  xpos -700
  ypos -344
  addUserKnob {20 User}
  addUserKnob {7 tolerance}
  tolerance 0.0007
 }
push $N200bc100
 Reformat {
  type "to box"
  box_width {{"\[exists input] ? input.width : root.width"}}
  box_height {{"\[exists input] ? input.height : root.height"}}
  box_fixed true
  box_pixel_aspect {{"\[exists input] ? input.pixel_aspect : root.pixel_aspect"}}
  resize none
  black_outside true
  name BboxRemove
  xpos -590
  ypos -370
 }
 BlinkScript {
  recompileCount 3
  KernelDescription "2 \"PlotSlice\" iterate pixelWise a85c49a08f78aaad29c10667611d0922f3ade835175dd677155ef71c6ca45491 2 \"src\" Read Random \"dst\" Write Random 7 \"plot_input\" Bool 1 AA== \"color\" Float 1 AAAAAA== \"max_val\" Float 1 AAAAAA== \"min_val\" Float 1 AAAAAA== \"draw_lines\" Bool 1 AA== \"tolerance\" Float 1 AAAAAA== \"lines_color\" Float 3 AAAAAAAAAAAAAAAAAAAAAA== 7 \"plot_input\" 1 1 \"color\" 1 1 \"max_val\" 1 1 \"min_val\" 1 1 \"draw_lines\" 1 1 \"tolerance\" 1 1 \"lines_color\" 3 1 0"
  kernelSource "kernel PlotSlice : public ImageComputationKernel<ePixelWise>\n\{\n  Image<eRead, eAccessRandom, eEdgeClamped> src;\n  Image<eWrite, eAccessRandom> dst;\n\n  param:\n    bool plot_input;\n    float color;\n    float max_val;\n    float min_val;\n    bool draw_lines;\n    float tolerance;\n    float3 lines_color;\n\n  float gaussian(float d, float a, float expv) \{\n    return max(0.0f, exp(-a*d*d)-expv);\n  \}\n\n  float gaussian_filter(float x, float y, float r) \{\n    // return gaussian weighted distance from origin (0, 0)\n    // given coordinate (x, y) and radius r\n    float a = 1.5f; // rate falloff\n    float expv = exp(-a*r*r);\n    return gaussian(x, a, expv) * gaussian(y, a, expv);\n  \}\n\n  void write(float x, float y, int k, float c) \{\n    int n = 2;\n    int u0 = round(x);\n    int v0 = round(y);\n    // skip if center pixel weight is greater than tolerance\n    // if ( dst.bounds.inside(u0, v0)) \{\n    //   if (dst(u0, v0, 3) >= tolerance) return;\n    // \}\n    // loop over neighborhood\n    for (int j = -n; j <= n; j++) \{\n      int v = v0 + j;\n      for (int i = -n; i <= n; i++) \{\n        int u = u0 + i;\n        if ( dst.bounds.inside(u, v)) \{\n          // get filter weight for coord (u,v)\n          float w = gaussian_filter(u-x, v-y, float(n));\n          float c0 = dst(u, v, k); // existing color\n          float w0 = dst(u, v, 3); // existing alpha\n          // merge current color sample over existing color sample\n          dst(u, v, k) = c*w+c0*(1-w);\n          // merge current weight over existing weight\n          dst(u, v, 3) = w+w0*(1-w);\n        \}\n      \}\n    \}\n  \}\n\n  float scale(float x) \{\n    return (x*dst.bounds.height())/(max_val)-((min_val/max_val)*dst.bounds.height());\n  \}\n\n  void process(int2 pos) \{\n    if (pos.y == 0) \{\n      if (draw_lines) \{\n        for (int i = 0; i < max_val; i++) \{\n          for (int k = 0; k < 3; k++) \{\n            write(pos.x, scale(i), k, lines_color\[k]);\n          \}\n        \}\n      \}\n      if (plot_input) \{\n        float4 source = src(pos.x, pos.y);\n        for (int i = 0; i < 3; i++)\{\n          write(pos.x, scale(source\[i]), i, color);\n        \}\n      \}\n    \}\n  \}\n\};"
  rebuild ""
  PlotSlice_plot_input {{parent.antialias}}
  PlotSlice_color 0.6
  PlotSlice_max_val {{parent.max_value+fabs(parent.min_value)}}
  PlotSlice_min_val {{parent.min_value}}
  PlotSlice_draw_lines {{parent.draw_lines}}
  PlotSlice_tolerance 1.01
  PlotSlice_lines_color {{parent.lines_color.r} {parent.lines_color.g} {parent.lines_color.b}}
  rebuild_finalise ""
  name PlotSlice
  xpos -590
  ypos -328
 }
 Merge2 {
  inputs 2
  bbox B
  name Switch_Method
  xpos -590
  ypos -274
  disable {{parent.antialias}}
 }
 Matrix {
  channels rgba
  matrix {
      {1 2 1}
      {2 4 2}
      {1 2 1}
    }
  normalize true
  name Antialias
  xpos -590
  ypos -226
 }
 Keyer {
  operation "luminance key"
  name Keyer1
  xpos -590
  ypos -184
 }
set N20243900 [stack 0]
push $N200bd600
 ContactSheet {
  inputs 2
  width {{Input.width}}
  height {{Input.height*2}}
  rows 2
  columns 1
  roworder TopBottom
  name ContactSheet2
  label Bottom
  xpos -370
  ypos -184
 }
push $N20243900
push $N200bd600
 ContactSheet {
  inputs 2
  width {{Input.width*2}}
  height {{Input.height}}
  rows 1
  columns 2
  name ContactSheet1
  label Right
  xpos -480
  ypos -184
 }
push $N20243900
push $N200bdd00
 Merge2 {
  inputs 2
  name Merge1
  xpos -810
  ypos -178
 }
push $N20243900
 Switch {
  inputs 4
  which {{parent.style}}
  name switch_plot_type
  xpos -810
  ypos -106
 }
 Output {
  name Output
  xpos -810
  ypos -34
 }
end_group
Constant {
 inputs 0
 format "1024 1024 0 0 1024 1024 1 square_1K"
 name Constant6
 note_font Helvetica
 xpos -590
 ypos 3471
 postage_stamp false
}
Ramp {
 p0 {0 0}
 p1 {{width} 0}
 color {{parent.PlotSlice6.max_value-parent.PlotSlice6.min_value}}
 name Ramp6
 note_font Helvetica
 xpos -590
 ypos 3495
}
Add {
 channels rgba
 value {{parent.PlotSlice6.min_value}}
 name Add8
 note_font Helvetica
 xpos -590
 ypos 3519
}
Dot {
 name Dot11
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos -556
 ypos 3594
}
Colorspace {
 colorspace_out AlexaV3LogC
 name Colorspace2
 label "\[value colorspace_in] -> \[value colorspace_out]"
 note_font Helvetica
 xpos -590
 ypos 3625
}
Grade {
 multiply 1.08
 add -0.035
 gamma 0.88
 black_clamp false
 name Grade7
 note_font Helvetica
 xpos -590
 ypos 3663
}
Colorspace {
 colorspace_in AlexaV3LogC
 name Colorspace1
 label "\[value colorspace_in] -> \[value colorspace_out]"
 note_font Helvetica
 xpos -590
 ypos 3705
}
Dot {
 name Dot12
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos -556
 ypos 3762
}
Group {
 name PlotSlice6
 label "\[value max_value] to \[value min_value]"
 xpos -480
 ypos 3752
 addUserKnob {20 PlotSlice_tab l PlotSlice}
 addUserKnob {41 useGPUIfAvailable l "Use GPU if available" T PlotSlice.useGPUIfAvailable}
 addUserKnob {12 pos1 l p1}
 addUserKnob {12 pos2 l p2 -STARTLINE}
 pos2 {{width} 0}
 addUserKnob {7 max_value l "max value" R 1 10}
 max_value 3
 addUserKnob {7 min_value l "min value" R -1 0}
 min_value -0.1
 addUserKnob {4 style M {replace over right bottom ""}}
 addUserKnob {6 antialias t "enable antialiasing. prettier, at the cost of speed." -STARTLINE}
 antialias true
 addUserKnob {6 draw_lines l "draw lines" t "draw horizontal lines every whole number" -STARTLINE}
 draw_lines true
 addUserKnob {18 lines_color l "lines color"}
 lines_color 0.1
 addUserKnob {6 lines_color_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
}
 Input {
  inputs 0
  name Input
  xpos -810
  ypos -658
 }
 Dot {
  name Dot13
  note_font_size 42
  note_font_color 0x7f7f7f01
  xpos -776
  ypos -558
 }
set N201eb900 [stack 0]
 Dot {
  name Dot12
  note_font_size 42
  note_font_color 0x7f7f7f01
  xpos -556
  ypos -558
 }
set N201eb200 [stack 0]
 Transform {
  translate {{-parent.pos1} {-parent.pos1}}
  black_outside false
  name Transform4
  label T
  xpos -590
  ypos -520
 }
 Transform {
  rotate {{"-degrees( atan2(parent.pos2.y-parent.pos1.y, parent.pos2.x-parent.pos1.x) )"}}
  black_outside false
  name Transform5
  label "R\n"
  xpos -590
  ypos -472
 }
 Transform {
  scale {{"width / sqrt(pow(parent.pos2.x-parent.pos1.x,2) + pow(parent.pos2.y-parent.pos1.y,2))"}}
  black_outside false
  name Transform6
  label S
  xpos -590
  ypos -424
 }
set N201e9d00 [stack 0]
 Crop {
  box {0 0 {Input.width} 1}
  reformat true
  crop false
  name Crop1
  xpos -700
  ypos -418
 }
 Expression {
  expr0 r/max_val-(min_val/max_val)
  expr1 g/max_val-(min_val/max_val)
  expr2 b/max_val-(min_val/max_val)
  expr3 a/max_val-(min_val/max_val)
  name Fit
  xpos -700
  ypos -394
  addUserKnob {20 Param}
  addUserKnob {7 max_val R 1 10}
  max_val {{parent.max_value+fabs(parent.min_value)}}
  addUserKnob {7 min_val R -1 0}
  min_val {{parent.min_value}}
 }
 Reformat {
  type "to box"
  box_width {{Input.width}}
  box_height {{Input.height}}
  box_fixed true
  resize distort
  filter impulse
  name Reformat1
  xpos -700
  ypos -370
 }
 Expression {
  temp_name0 c
  temp_expr0 0.8
  expr0 "fabs((y/height)-r)<=tolerance ? c : 0"
  expr1 "fabs((y/height)-g)<=tolerance ? c : 0"
  expr2 "fabs((y/height)-b)<=tolerance ? c : 0"
  expr3 "fabs((y/height)-a)<=tolerance ? c : 0"
  name PlotSlice_
  xpos -700
  ypos -344
  addUserKnob {20 User}
  addUserKnob {7 tolerance}
  tolerance 0.0007
 }
push $N201e9d00
 Reformat {
  type "to box"
  box_width {{"\[exists input] ? input.width : root.width"}}
  box_height {{"\[exists input] ? input.height : root.height"}}
  box_fixed true
  box_pixel_aspect {{"\[exists input] ? input.pixel_aspect : root.pixel_aspect"}}
  resize none
  black_outside true
  name BboxRemove
  xpos -590
  ypos -370
 }
 BlinkScript {
  recompileCount 3
  KernelDescription "2 \"PlotSlice\" iterate pixelWise a85c49a08f78aaad29c10667611d0922f3ade835175dd677155ef71c6ca45491 2 \"src\" Read Random \"dst\" Write Random 7 \"plot_input\" Bool 1 AA== \"color\" Float 1 AAAAAA== \"max_val\" Float 1 AAAAAA== \"min_val\" Float 1 AAAAAA== \"draw_lines\" Bool 1 AA== \"tolerance\" Float 1 AAAAAA== \"lines_color\" Float 3 AAAAAAAAAAAAAAAAAAAAAA== 7 \"plot_input\" 1 1 \"color\" 1 1 \"max_val\" 1 1 \"min_val\" 1 1 \"draw_lines\" 1 1 \"tolerance\" 1 1 \"lines_color\" 3 1 0"
  kernelSource "kernel PlotSlice : public ImageComputationKernel<ePixelWise>\n\{\n  Image<eRead, eAccessRandom, eEdgeClamped> src;\n  Image<eWrite, eAccessRandom> dst;\n\n  param:\n    bool plot_input;\n    float color;\n    float max_val;\n    float min_val;\n    bool draw_lines;\n    float tolerance;\n    float3 lines_color;\n\n  float gaussian(float d, float a, float expv) \{\n    return max(0.0f, exp(-a*d*d)-expv);\n  \}\n\n  float gaussian_filter(float x, float y, float r) \{\n    // return gaussian weighted distance from origin (0, 0)\n    // given coordinate (x, y) and radius r\n    float a = 1.5f; // rate falloff\n    float expv = exp(-a*r*r);\n    return gaussian(x, a, expv) * gaussian(y, a, expv);\n  \}\n\n  void write(float x, float y, int k, float c) \{\n    int n = 2;\n    int u0 = round(x);\n    int v0 = round(y);\n    // skip if center pixel weight is greater than tolerance\n    // if ( dst.bounds.inside(u0, v0)) \{\n    //   if (dst(u0, v0, 3) >= tolerance) return;\n    // \}\n    // loop over neighborhood\n    for (int j = -n; j <= n; j++) \{\n      int v = v0 + j;\n      for (int i = -n; i <= n; i++) \{\n        int u = u0 + i;\n        if ( dst.bounds.inside(u, v)) \{\n          // get filter weight for coord (u,v)\n          float w = gaussian_filter(u-x, v-y, float(n));\n          float c0 = dst(u, v, k); // existing color\n          float w0 = dst(u, v, 3); // existing alpha\n          // merge current color sample over existing color sample\n          dst(u, v, k) = c*w+c0*(1-w);\n          // merge current weight over existing weight\n          dst(u, v, 3) = w+w0*(1-w);\n        \}\n      \}\n    \}\n  \}\n\n  float scale(float x) \{\n    return (x*dst.bounds.height())/(max_val)-((min_val/max_val)*dst.bounds.height());\n  \}\n\n  void process(int2 pos) \{\n    if (pos.y == 0) \{\n      if (draw_lines) \{\n        for (int i = 0; i < max_val; i++) \{\n          for (int k = 0; k < 3; k++) \{\n            write(pos.x, scale(i), k, lines_color\[k]);\n          \}\n        \}\n      \}\n      if (plot_input) \{\n        float4 source = src(pos.x, pos.y);\n        for (int i = 0; i < 3; i++)\{\n          write(pos.x, scale(source\[i]), i, color);\n        \}\n      \}\n    \}\n  \}\n\};"
  rebuild ""
  PlotSlice_plot_input {{parent.antialias}}
  PlotSlice_color 0.6
  PlotSlice_max_val {{parent.max_value+fabs(parent.min_value)}}
  PlotSlice_min_val {{parent.min_value}}
  PlotSlice_draw_lines {{parent.draw_lines}}
  PlotSlice_tolerance 1.01
  PlotSlice_lines_color {{parent.lines_color.r} {parent.lines_color.g} {parent.lines_color.b}}
  rebuild_finalise ""
  name PlotSlice
  xpos -590
  ypos -328
 }
 Merge2 {
  inputs 2
  bbox B
  name Switch_Method
  xpos -590
  ypos -274
  disable {{parent.antialias}}
 }
 Matrix {
  channels rgba
  matrix {
      {1 2 1}
      {2 4 2}
      {1 2 1}
    }
  normalize true
  name Antialias
  xpos -590
  ypos -226
 }
 Keyer {
  operation "luminance key"
  name Keyer1
  xpos -590
  ypos -184
 }
set N201b1600 [stack 0]
push $N201eb200
 ContactSheet {
  inputs 2
  width {{Input.width}}
  height {{Input.height*2}}
  rows 2
  columns 1
  roworder TopBottom
  name ContactSheet2
  label Bottom
  xpos -370
  ypos -184
 }
push $N201b1600
push $N201eb200
 ContactSheet {
  inputs 2
  width {{Input.width*2}}
  height {{Input.height}}
  rows 1
  columns 2
  name ContactSheet1
  label Right
  xpos -480
  ypos -184
 }
push $N201b1600
push $N201eb900
 Merge2 {
  inputs 2
  name Merge1
  xpos -810
  ypos -178
 }
push $N201b1600
 Switch {
  inputs 4
  which {{parent.style}}
  name switch_plot_type
  xpos -810
  ypos -106
 }
 Output {
  name Output
  xpos -810
  ypos -34
 }
end_group
Read {
 inputs 0
 file_type exr
 file /cave/vault/test_footage/cinematography.net/transcode/valvula-2014/arri-alexa-plus-xt/logc_wg/A001C002_140117_R6OT.0795210.exr
 format "2880 1620 0 0 2880 1620 1 "
 origset true
 auto_alpha true
 name Read6
 tile_color 0x989898ff
 note_font Helvetica
 xpos -2350
 ypos -644
}
Read {
 inputs 0
 file_type exr
 file /cave/vault/test_footage/cinematography.net/transcode/valvula-2014/arri-alexa-plus-xt/logc_wg/A001C002_140117_R6OT.0795306.exr
 format "2880 1620 0 0 2880 1620 1 "
 origset true
 auto_alpha true
 name Read7
 tile_color 0x989898ff
 note_font Helvetica
 xpos -2240
 ypos -644
}
Read {
 inputs 0
 file_type exr
 file /cave/vault/test_footage/cinematography.net/transcode/valvula-2014/arri-alexa-plus-xt/logc_wg/A001C002_140117_R6OT.0794484.exr
 format "2880 1620 0 0 2880 1620 1 "
 origset true
 auto_alpha true
 name Read4
 tile_color 0x989898ff
 note_font Helvetica
 xpos -2570
 ypos -644
}
Read {
 inputs 0
 file_type exr
 file /cave/vault/test_footage/cinematography.net/transcode/valvula-2014/arri-alexa-plus-xt/logc_wg/A001C002_140117_R6OT.0794163.exr
 format "2880 1620 0 0 2880 1620 1 "
 origset true
 auto_alpha true
 name Read3
 tile_color 0x989898ff
 note_font Helvetica
 xpos -2680
 ypos -644
}
Read {
 inputs 0
 file_type exr
 file /cave/vault/test_footage/cinematography.net/transcode/valvula-2014/arri-alexa-plus-xt/logc_wg/A001C010_140117_R6OT.0002962.exr
 format "2880 1620 0 0 2880 1620 1 "
 origset true
 auto_alpha true
 name Read10
 tile_color 0x989898ff
 note_font Helvetica
 xpos -1910
 ypos -644
}
Read {
 inputs 0
 file_type exr
 file /cave/vault/test_footage/cinematography.net/transcode/valvula-2014/arri-alexa-plus-xt/logc_wg/A001C009_140117_R6OT.0013066.exr
 format "2880 1620 0 0 2880 1620 1 "
 origset true
 auto_alpha true
 name Read9
 tile_color 0x989898ff
 note_font Helvetica
 xpos -2020
 ypos -644
}
Read {
 inputs 0
 file_type exr
 file /cave/vault/test_footage/cinematography.net/transcode/valvula-2014/arri-alexa-plus-xt/logc_wg/A001C002_140117_R6OT.0795100.exr
 format "2880 1620 0 0 2880 1620 1 "
 origset true
 auto_alpha true
 name Read5
 tile_color 0x989898ff
 note_font Helvetica
 xpos -2460
 ypos -644
}
Read {
 inputs 0
 file_type exr
 file /cave/vault/test_footage/cinematography.net/transcode/camera_match_alexa_bmcc_c500_epic_f65/Alexa_4-32_A001.2139964.aces.exr
 format "2880 1620 0 0 2880 1620 1 "
 origset true
 auto_alpha true
 name Read2
 tile_color 0x989898ff
 note_font Helvetica
 xpos -2790
 ypos -644
}
OCIOColorSpace {
 in_colorspace acescg
 out_colorspace drt_aces_rec709
 name OCIOColorSpace4
 label "\[value in_colorspace] -> \[value out_colorspace]"
 note_font Helvetica
 xpos -2790
 ypos -519
}
Read {
 inputs 0
 file_type exr
 file /cave/vault/test_footage/cinematography.net/transcode/valvula-2014/arri-alexa-plus-xt/logc_wg/A001C003_140117_R6OT.0860144.exr
 format "2880 1620 0 0 2880 1620 1 "
 origset true
 auto_alpha true
 name Read8
 tile_color 0x989898ff
 note_font Helvetica
 xpos -2570
 ypos -284
}
OCIOColorSpace {
 in_colorspace idt_alexa_logc-wg
 out_colorspace acescg
 name OCIOColorSpace1
 label "\[value in_colorspace] -> \[value out_colorspace]"
 note_font Helvetica
 xpos -2570
 ypos -135
}
set N143ce400 [stack 0]
Transform {
 translate {{curve x1 0 x8 616} {curve x1 0 x8 58}}
 center {1024 1024}
 motionblur 4
 shutteroffset centred
 name Transform2
 label "Scene Referred Motionblur"
 note_font Helvetica
 xpos -2460
 ypos 33
}
OCIOColorSpace {
 in_colorspace acescg
 out_colorspace drt_aces_rec709
 name OCIOColorSpace3
 label "\[value in_colorspace] -> \[value out_colorspace]"
 note_font Helvetica
 xpos -2460
 ypos 89
}
push $N143ce400
OCIOColorSpace {
 in_colorspace acescg
 out_colorspace drt_aces_rec709
 name OCIOColorSpace2
 label "\[value in_colorspace] -> \[value out_colorspace]"
 note_font Helvetica
 xpos -2570
 ypos -60
}
Transform {
 translate {{curve x1 0 x8 616} {curve x1 0 x8 58}}
 center {1024 1024}
 motionblur 4
 shutteroffset centred
 name Transform1
 label "Display Referred Motionblur"
 note_font Helvetica
 xpos -2570
 ypos 9
}
Constant {
 inputs 0
 format "640 480 0 0 640 480 1 "
 name Constant4
 note_font Helvetica
 xpos 1610
 ypos 303
 postage_stamp false
}
Radial {
 area {78 0 558 480}
 softness 0
 name Radial1
 note_font Helvetica
 xpos 1610
 ypos 351
}
Write {
 channels rgba
 file /cave/proj/train/compositing_value-operators/assets/circle.png
 file_type png
 checkHashOnRead false
 version 1
 name Write1
 note_font Helvetica
 xpos 1610
 ypos 417
}
Viewer {
 inputs 2
 frame_range 1-100
 colour_sample_bbox {0.08749999851 0.2986111045 0.08819444478 0.2993055582}
 viewerProcess "raw (rec1886)"
 name Viewer1
 note_font Helvetica
 xpos -1470
 ypos 4023
 hide_input true
 addUserKnob {20 Lock}
 addUserKnob {6 lock_all_buffers l "lock all buffers" -STARTLINE}
 addUserKnob {6 lock_buffer_1 l "lock buffer 1" +STARTLINE}
 addUserKnob {6 lock_buffer_2 l "lock buffer 2" +STARTLINE}
 addUserKnob {6 lock_buffer_3 l "lock buffer 3" +STARTLINE}
 addUserKnob {6 lock_buffer_4 l "lock buffer 4" +STARTLINE}
 addUserKnob {6 lock_buffer_5 l "lock buffer 5" +STARTLINE}
 addUserKnob {6 lock_buffer_6 l "lock buffer 6" +STARTLINE}
 addUserKnob {6 lock_buffer_7 l "lock buffer 7" +STARTLINE}
 addUserKnob {6 lock_buffer_8 l "lock buffer 8" +STARTLINE}
 addUserKnob {6 lock_buffer_9 l "lock buffer 9" +STARTLINE}
 addUserKnob {6 lock_buffer_0 l "lock buffer 0" +STARTLINE}
}
